

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Sun Sep 04 02:46:04 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.20
    19                           ; Generated 12/02/2020 GMT
    20                           ; 
    21                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC16F877A Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000E                     	;# 
    68  000F                     	;# 
    69  0010                     	;# 
    70  0011                     	;# 
    71  0012                     	;# 
    72  0013                     	;# 
    73  0014                     	;# 
    74  0015                     	;# 
    75  0015                     	;# 
    76  0016                     	;# 
    77  0017                     	;# 
    78  0018                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001B                     	;# 
    83  001C                     	;# 
    84  001D                     	;# 
    85  001E                     	;# 
    86  001F                     	;# 
    87  0081                     	;# 
    88  0085                     	;# 
    89  0086                     	;# 
    90  0087                     	;# 
    91  0088                     	;# 
    92  0089                     	;# 
    93  008C                     	;# 
    94  008D                     	;# 
    95  008E                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0094                     	;# 
   100  0098                     	;# 
   101  0099                     	;# 
   102  009C                     	;# 
   103  009D                     	;# 
   104  009E                     	;# 
   105  009F                     	;# 
   106  010C                     	;# 
   107  010D                     	;# 
   108  010E                     	;# 
   109  010F                     	;# 
   110  018C                     	;# 
   111  018D                     	;# 
   112  0000                     	;# 
   113  0001                     	;# 
   114  0002                     	;# 
   115  0003                     	;# 
   116  0004                     	;# 
   117  0005                     	;# 
   118  0006                     	;# 
   119  0007                     	;# 
   120  0008                     	;# 
   121  0009                     	;# 
   122  000A                     	;# 
   123  000B                     	;# 
   124  000C                     	;# 
   125  000D                     	;# 
   126  000E                     	;# 
   127  000E                     	;# 
   128  000F                     	;# 
   129  0010                     	;# 
   130  0011                     	;# 
   131  0012                     	;# 
   132  0013                     	;# 
   133  0014                     	;# 
   134  0015                     	;# 
   135  0015                     	;# 
   136  0016                     	;# 
   137  0017                     	;# 
   138  0018                     	;# 
   139  0019                     	;# 
   140  001A                     	;# 
   141  001B                     	;# 
   142  001B                     	;# 
   143  001C                     	;# 
   144  001D                     	;# 
   145  001E                     	;# 
   146  001F                     	;# 
   147  0081                     	;# 
   148  0085                     	;# 
   149  0086                     	;# 
   150  0087                     	;# 
   151  0088                     	;# 
   152  0089                     	;# 
   153  008C                     	;# 
   154  008D                     	;# 
   155  008E                     	;# 
   156  0091                     	;# 
   157  0092                     	;# 
   158  0093                     	;# 
   159  0094                     	;# 
   160  0098                     	;# 
   161  0099                     	;# 
   162  009C                     	;# 
   163  009D                     	;# 
   164  009E                     	;# 
   165  009F                     	;# 
   166  010C                     	;# 
   167  010D                     	;# 
   168  010E                     	;# 
   169  010F                     	;# 
   170  018C                     	;# 
   171  018D                     	;# 
   172  0000                     	;# 
   173  0001                     	;# 
   174  0002                     	;# 
   175  0003                     	;# 
   176  0004                     	;# 
   177  0005                     	;# 
   178  0006                     	;# 
   179  0007                     	;# 
   180  0008                     	;# 
   181  0009                     	;# 
   182  000A                     	;# 
   183  000B                     	;# 
   184  000C                     	;# 
   185  000D                     	;# 
   186  000E                     	;# 
   187  000E                     	;# 
   188  000F                     	;# 
   189  0010                     	;# 
   190  0011                     	;# 
   191  0012                     	;# 
   192  0013                     	;# 
   193  0014                     	;# 
   194  0015                     	;# 
   195  0015                     	;# 
   196  0016                     	;# 
   197  0017                     	;# 
   198  0018                     	;# 
   199  0019                     	;# 
   200  001A                     	;# 
   201  001B                     	;# 
   202  001B                     	;# 
   203  001C                     	;# 
   204  001D                     	;# 
   205  001E                     	;# 
   206  001F                     	;# 
   207  0081                     	;# 
   208  0085                     	;# 
   209  0086                     	;# 
   210  0087                     	;# 
   211  0088                     	;# 
   212  0089                     	;# 
   213  008C                     	;# 
   214  008D                     	;# 
   215  008E                     	;# 
   216  0091                     	;# 
   217  0092                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  010C                     	;# 
   227  010D                     	;# 
   228  010E                     	;# 
   229  010F                     	;# 
   230  018C                     	;# 
   231  018D                     	;# 
   232  0019                     _TXREG	set	25
   233  001A                     _RCREG	set	26
   234  0064                     _TXIF	set	100
   235  0065                     _RCIF	set	101
   236  00C4                     _CREN	set	196
   237  00C7                     _SPEN	set	199
   238  0099                     _SPBRG	set	153
   239                           
   240                           	psect	strings
   241  0003                     __pstrings:
   242  0003                     stringtab:
   243  0003                     __stringtab:
   244  0003                     stringcode:	
   245                           ;	String table - string pointers are 1 byte each
   246                           
   247  0003                     stringdir:
   248  0003  3000               	movlw	high stringdir
   249  0004  008A               	movwf	10
   250  0005  0804               	movf	4,w
   251  0006  0A84               	incf	4,f
   252  0007  0782               	addwf	2,f
   253  0008                     __stringbase:
   254  0008  3400               	retlw	0
   255  0009                     __end_of__stringtab:
   256  0009                     STR_1:
   257  0009  3455               	retlw	85	;'U'
   258  000A  3441               	retlw	65	;'A'
   259  000B  3452               	retlw	82	;'R'
   260  000C  3454               	retlw	84	;'T'
   261  000D  3420               	retlw	32	;' '
   262  000E  3454               	retlw	84	;'T'
   263  000F  3465               	retlw	101	;'e'
   264  0010  3473               	retlw	115	;'s'
   265  0011  3474               	retlw	116	;'t'
   266  0012  3420               	retlw	32	;' '
   267  0013  3443               	retlw	67	;'C'
   268  0014  346F               	retlw	111	;'o'
   269  0015  3464               	retlw	100	;'d'
   270  0016  3465               	retlw	101	;'e'
   271  0017  340A               	retlw	10
   272  0018  340D               	retlw	13
   273  0019  3400               	retlw	0
   274                           
   275                           	psect	cinit
   276  07FC                     start_initialization:	
   277                           ; #config settings
   278                           
   279  07FC                     __initialization:
   280  07FC                     end_of_initialization:	
   281                           ;End of C runtime variable initialization code
   282                           
   283  07FC                     __end_of__initialization:
   284  07FC  0183               	clrf	3
   285  07FD  120A  118A  2F2E   	ljmp	_main	;jump to C main() function
   286                           
   287                           	psect	cstackCOMMON
   288  0070                     __pcstackCOMMON:
   289  0070                     ?_puts:
   290  0070                     ?_getchar:	
   291                           ; 1 bytes @ 0x0
   292                           
   293  0070                     ??_getchar:	
   294                           ; 1 bytes @ 0x0
   295                           
   296  0070                     ?_putchar:	
   297                           ; 1 bytes @ 0x0
   298                           
   299  0070                     ??_putchar:	
   300                           ; 1 bytes @ 0x0
   301                           
   302  0070                     ?_init_config:	
   303                           ; 1 bytes @ 0x0
   304                           
   305  0070                     ?_main:	
   306                           ; 1 bytes @ 0x0
   307                           
   308  0070                     ?___lldiv:	
   309                           ; 1 bytes @ 0x0
   310                           
   311  0070                     putchar@data:	
   312                           ; 4 bytes @ 0x0
   313                           
   314  0070                     ___lldiv@divisor:	
   315                           ; 1 bytes @ 0x0
   316                           
   317                           
   318                           ; 4 bytes @ 0x0
   319  0070                     	ds	1
   320  0071                     ??_puts:
   321                           
   322                           ; 1 bytes @ 0x1
   323  0071                     	ds	1
   324  0072                     puts@s:
   325                           
   326                           ; 1 bytes @ 0x2
   327  0072                     	ds	2
   328  0074                     ___lldiv@dividend:
   329                           
   330                           ; 4 bytes @ 0x4
   331  0074                     	ds	4
   332  0078                     ??___lldiv:
   333                           
   334                           ; 1 bytes @ 0x8
   335  0078                     	ds	1
   336  0079                     ___lldiv@quotient:
   337                           
   338                           ; 4 bytes @ 0x9
   339  0079                     	ds	4
   340  007D                     ___lldiv@counter:
   341                           
   342                           ; 1 bytes @ 0xD
   343  007D                     	ds	1
   344  007E                     ??_init_config:
   345                           
   346                           	psect	cstackBANK0
   347  0020                     __pcstackBANK0:	
   348                           ; 1 bytes @ 0xE
   349                           
   350  0020                     ?_init_uart:
   351  0020                     init_uart@baud:	
   352                           ; 1 bytes @ 0x0
   353                           
   354                           
   355                           ; 4 bytes @ 0x0
   356  0020                     	ds	4
   357  0024                     ??_init_uart:
   358                           
   359                           ; 1 bytes @ 0x4
   360  0024                     	ds	4
   361  0028                     ??_main:
   362                           
   363                           ; 1 bytes @ 0x8
   364  0028                     	ds	1
   365  0029                     main@ch:
   366                           
   367                           ; 1 bytes @ 0x9
   368  0029                     	ds	1
   369                           
   370                           	psect	maintext
   371  072E                     __pmaintext:	
   372 ;;
   373 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   374 ;;
   375 ;; *************** function _main *****************
   376 ;; Defined at:
   377 ;;		line 16 in file "main.c"
   378 ;; Parameters:    Size  Location     Type
   379 ;;		None
   380 ;; Auto vars:     Size  Location     Type
   381 ;;  ch              1    9[BANK0 ] unsigned char 
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : B00/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   391 ;;      Params:         0       0       0       0       0
   392 ;;      Locals:         0       1       0       0       0
   393 ;;      Temps:          0       1       0       0       0
   394 ;;      Totals:         0       2       0       0       0
   395 ;;Total ram usage:        2 bytes
   396 ;; Hardware stack levels required when called: 3
   397 ;; This function calls:
   398 ;;		_getchar
   399 ;;		_init_config
   400 ;;		_putchar
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406  072E                     _main:	
   407                           ;psect for function _main
   408                           
   409  072E                     l748:	
   410                           ;incstack = 0
   411                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   412                           
   413  072E  120A  118A  2718  120A  118A  	fcall	_init_config
   414  0733                     l750:
   415  0733  120A  118A  2704  120A  118A  	fcall	_getchar
   416  0738  1283               	bcf	3,5	;RP0=0, select bank0
   417  0739  1303               	bcf	3,6	;RP1=0, select bank0
   418  073A  00A8               	movwf	??_main
   419  073B  0828               	movf	??_main,w
   420  073C  00A9               	movwf	main@ch
   421  073D                     l752:
   422  073D  0829               	movf	main@ch,w
   423  073E  120A  118A  270D  120A  118A  	fcall	_putchar
   424  0743  2F33               	goto	l750
   425  0744  120A  118A  2800   	ljmp	start
   426  0747                     __end_of_main:
   427                           
   428                           	psect	text1
   429  0718                     __ptext1:	
   430 ;; *************** function _init_config *****************
   431 ;; Defined at:
   432 ;;		line 10 in file "main.c"
   433 ;; Parameters:    Size  Location     Type
   434 ;;		None
   435 ;; Auto vars:     Size  Location     Type
   436 ;;		None
   437 ;; Return value:  Size  Location     Type
   438 ;;                  1    wreg      void 
   439 ;; Registers used:
   440 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   441 ;; Tracked objects:
   442 ;;		On entry : 0/0
   443 ;;		On exit  : 0/0
   444 ;;		Unchanged: 0/0
   445 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   446 ;;      Params:         0       0       0       0       0
   447 ;;      Locals:         0       0       0       0       0
   448 ;;      Temps:          0       0       0       0       0
   449 ;;      Totals:         0       0       0       0       0
   450 ;;Total ram usage:        0 bytes
   451 ;; Hardware stack levels used: 1
   452 ;; Hardware stack levels required when called: 2
   453 ;; This function calls:
   454 ;;		_init_uart
   455 ;;		_puts
   456 ;; This function is called by:
   457 ;;		_main
   458 ;; This function uses a non-reentrant model
   459 ;;
   460                           
   461  0718                     _init_config:	
   462                           ;psect for function _init_config
   463                           
   464  0718                     l738:	
   465                           ;incstack = 0
   466                           ; Regs used in _init_config: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   467                           
   468                           
   469                           ;main.c: 11:     while (1) {
   470  0718  3000               	movlw	0
   471  0719  1283               	bcf	3,5	;RP0=0, select bank0
   472  071A  1303               	bcf	3,6	;RP1=0, select bank0
   473  071B  00A3               	movwf	init_uart@baud+3
   474  071C  3000               	movlw	0
   475  071D  00A2               	movwf	init_uart@baud+2
   476  071E  3025               	movlw	37
   477  071F  00A1               	movwf	init_uart@baud+1
   478  0720  3080               	movlw	128
   479  0721  00A0               	movwf	init_uart@baud
   480  0722  120A  118A  2766  120A  118A  	fcall	_init_uart
   481  0727                     l740:
   482                           
   483                           ;main.c: 13:         putchar(ch);
   484  0727  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   485  0728  120A  118A  2747  120A  118A  	fcall	_puts
   486  072D                     l11:
   487  072D  0008               	return
   488  072E                     __end_of_init_config:
   489                           
   490                           	psect	text2
   491  0747                     __ptext2:	
   492 ;; *************** function _puts *****************
   493 ;; Defined at:
   494 ;;		line 46 in file "uart.c"
   495 ;; Parameters:    Size  Location     Type
   496 ;;  s               1    wreg     PTR const unsigned char 
   497 ;;		 -> STR_1(17), 
   498 ;; Auto vars:     Size  Location     Type
   499 ;;  s               1    2[COMMON] PTR const unsigned char 
   500 ;;		 -> STR_1(17), 
   501 ;; Return value:  Size  Location     Type
   502 ;;                  1    wreg      void 
   503 ;; Registers used:
   504 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   505 ;; Tracked objects:
   506 ;;		On entry : 0/0
   507 ;;		On exit  : 0/0
   508 ;;		Unchanged: 0/0
   509 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   510 ;;      Params:         0       0       0       0       0
   511 ;;      Locals:         1       0       0       0       0
   512 ;;      Temps:          1       0       0       0       0
   513 ;;      Totals:         2       0       0       0       0
   514 ;;Total ram usage:        2 bytes
   515 ;; Hardware stack levels used: 1
   516 ;; Hardware stack levels required when called: 1
   517 ;; This function calls:
   518 ;;		_putchar
   519 ;; This function is called by:
   520 ;;		_init_config
   521 ;; This function uses a non-reentrant model
   522 ;;
   523                           
   524  0747                     _puts:	
   525                           ;psect for function _puts
   526                           
   527                           
   528                           ;incstack = 0
   529                           ; Regs used in _puts: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   530                           ;puts@s stored from wreg
   531  0747  00F2               	movwf	puts@s
   532  0748                     l730:
   533                           
   534                           ;uart.c: 46: void puts(const char *s);uart.c: 47: {;uart.c: 48:     while (*s)
   535  0748  2F59               	goto	l736
   536  0749                     l732:
   537                           
   538                           ;uart.c: 49:     {;uart.c: 50:         putchar(*s++);
   539  0749  0872               	movf	puts@s,w
   540  074A  0084               	movwf	4
   541  074B  120A  118A  2003  120A  118A  	fcall	stringdir
   542  0750  120A  118A  270D  120A  118A  	fcall	_putchar
   543  0755                     l734:
   544  0755  3001               	movlw	1
   545  0756  00F1               	movwf	??_puts
   546  0757  0871               	movf	??_puts,w
   547  0758  07F2               	addwf	puts@s,f
   548  0759                     l736:
   549                           
   550                           ;uart.c: 48:     while (*s)
   551  0759  0872               	movf	puts@s,w
   552  075A  0084               	movwf	4
   553  075B  120A  118A  2003  120A  118A  	fcall	stringdir
   554  0760  3A00               	xorlw	0
   555  0761  1D03               	skipz
   556  0762  2F64               	goto	u211
   557  0763  2F65               	goto	u210
   558  0764                     u211:
   559  0764  2F49               	goto	l732
   560  0765                     u210:
   561  0765                     l54:
   562  0765  0008               	return
   563  0766                     __end_of_puts:
   564                           
   565                           	psect	text3
   566  070D                     __ptext3:	
   567 ;; *************** function _putchar *****************
   568 ;; Defined at:
   569 ;;		line 31 in file "uart.c"
   570 ;; Parameters:    Size  Location     Type
   571 ;;  data            1    wreg     unsigned char 
   572 ;; Auto vars:     Size  Location     Type
   573 ;;  data            1    0[COMMON] unsigned char 
   574 ;; Return value:  Size  Location     Type
   575 ;;                  1    wreg      void 
   576 ;; Registers used:
   577 ;;		wreg
   578 ;; Tracked objects:
   579 ;;		On entry : 0/0
   580 ;;		On exit  : 0/0
   581 ;;		Unchanged: 0/0
   582 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   583 ;;      Params:         0       0       0       0       0
   584 ;;      Locals:         1       0       0       0       0
   585 ;;      Temps:          0       0       0       0       0
   586 ;;      Totals:         1       0       0       0       0
   587 ;;Total ram usage:        1 bytes
   588 ;; Hardware stack levels used: 1
   589 ;; This function calls:
   590 ;;		Nothing
   591 ;; This function is called by:
   592 ;;		_main
   593 ;;		_puts
   594 ;; This function uses a non-reentrant model
   595 ;;
   596                           
   597  070D                     _putchar:	
   598                           ;psect for function _putchar
   599                           
   600                           
   601                           ;incstack = 0
   602                           ; Regs used in _putchar: [wreg]
   603                           ;putchar@data stored from wreg
   604  070D  00F0               	movwf	putchar@data
   605  070E                     l700:
   606                           
   607                           ;uart.c: 31: void putchar(unsigned char data);uart.c: 32: {;uart.c: 34:     TXREG = data
      +                          ;
   608  070E  0870               	movf	putchar@data,w
   609  070F  1283               	bcf	3,5	;RP0=0, select bank0
   610  0710  1303               	bcf	3,6	;RP1=0, select bank0
   611  0711  0099               	movwf	25	;volatile
   612  0712                     l46:	
   613                           ;uart.c: 40:     } while (TXIF != 1);
   614                           
   615  0712  1E0C               	btfss	12,4	;volatile
   616  0713  2F15               	goto	u121
   617  0714  2F16               	goto	u120
   618  0715                     u121:
   619  0715  2F12               	goto	l46
   620  0716                     u120:
   621  0716                     l47:
   622                           
   623                           ;uart.c: 43:     TXIF = 0;
   624  0716  120C               	bcf	12,4	;volatile
   625  0717                     l48:
   626  0717  0008               	return
   627  0718                     __end_of_putchar:
   628                           
   629                           	psect	text4
   630  0766                     __ptext4:	
   631 ;; *************** function _init_uart *****************
   632 ;; Defined at:
   633 ;;		line 4 in file "uart.c"
   634 ;; Parameters:    Size  Location     Type
   635 ;;  baud            4    0[BANK0 ] unsigned long 
   636 ;; Auto vars:     Size  Location     Type
   637 ;;		None
   638 ;; Return value:  Size  Location     Type
   639 ;;                  1    wreg      void 
   640 ;; Registers used:
   641 ;;		wreg, status,2, status,0, pclath, cstack
   642 ;; Tracked objects:
   643 ;;		On entry : 0/0
   644 ;;		On exit  : 0/0
   645 ;;		Unchanged: 0/0
   646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   647 ;;      Params:         0       4       0       0       0
   648 ;;      Locals:         0       0       0       0       0
   649 ;;      Temps:          0       4       0       0       0
   650 ;;      Totals:         0       8       0       0       0
   651 ;;Total ram usage:        8 bytes
   652 ;; Hardware stack levels used: 1
   653 ;; Hardware stack levels required when called: 1
   654 ;; This function calls:
   655 ;;		___lldiv
   656 ;; This function is called by:
   657 ;;		_init_config
   658 ;; This function uses a non-reentrant model
   659 ;;
   660                           
   661  0766                     _init_uart:	
   662                           ;psect for function _init_uart
   663                           
   664  0766                     l726:	
   665                           ;incstack = 0
   666                           ; Regs used in _init_uart: [wreg+status,2+status,0+pclath+cstack]
   667                           
   668                           
   669                           ;uart.c: 4: void init_uart(unsigned long baud);uart.c: 5: {;uart.c: 7:     SPEN = 1;
   670  0766  1283               	bcf	3,5	;RP0=0, select bank0
   671  0767  1303               	bcf	3,6	;RP1=0, select bank0
   672  0768  1798               	bsf	24,7	;volatile
   673                           
   674                           ;uart.c: 10:     CREN = 1;
   675  0769  1618               	bsf	24,4	;volatile
   676  076A                     l728:
   677                           
   678                           ;uart.c: 13:     SPBRG = (20000000 / (16 * baud)) - 1;
   679  076A  0820               	movf	init_uart@baud,w
   680  076B  00A4               	movwf	??_init_uart
   681  076C  0821               	movf	init_uart@baud+1,w
   682  076D  00A5               	movwf	??_init_uart+1
   683  076E  0822               	movf	init_uart@baud+2,w
   684  076F  00A6               	movwf	??_init_uart+2
   685  0770  0823               	movf	init_uart@baud+3,w
   686  0771  00A7               	movwf	??_init_uart+3
   687  0772  3004               	movlw	4
   688  0773                     u205:
   689  0773  1003               	clrc
   690  0774  0DA4               	rlf	??_init_uart,f
   691  0775  0DA5               	rlf	??_init_uart+1,f
   692  0776  0DA6               	rlf	??_init_uart+2,f
   693  0777  0DA7               	rlf	??_init_uart+3,f
   694  0778                     u200:
   695  0778  3EFF               	addlw	-1
   696  0779  1D03               	skipz
   697  077A  2F73               	goto	u205
   698  077B  0827               	movf	??_init_uart+3,w
   699  077C  00F3               	movwf	___lldiv@divisor+3
   700  077D  0826               	movf	??_init_uart+2,w
   701  077E  00F2               	movwf	___lldiv@divisor+2
   702  077F  0825               	movf	??_init_uart+1,w
   703  0780  00F1               	movwf	___lldiv@divisor+1
   704  0781  0824               	movf	??_init_uart,w
   705  0782  00F0               	movwf	___lldiv@divisor
   706  0783  3001               	movlw	1
   707  0784  00F7               	movwf	___lldiv@dividend+3
   708  0785  3031               	movlw	49
   709  0786  00F6               	movwf	___lldiv@dividend+2
   710  0787  302D               	movlw	45
   711  0788  00F5               	movwf	___lldiv@dividend+1
   712  0789  3000               	movlw	0
   713  078A  00F4               	movwf	___lldiv@dividend
   714  078B  120A  118A  2796  120A  118A  	fcall	___lldiv
   715  0790  0870               	movf	?___lldiv,w
   716  0791  3EFF               	addlw	255
   717  0792  1683               	bsf	3,5	;RP0=1, select bank1
   718  0793  1303               	bcf	3,6	;RP1=0, select bank1
   719  0794  0099               	movwf	25	;volatile
   720  0795                     l36:
   721  0795  0008               	return
   722  0796                     __end_of_init_uart:
   723                           
   724                           	psect	text5
   725  0796                     __ptext5:	
   726 ;; *************** function ___lldiv *****************
   727 ;; Defined at:
   728 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.36\pic\sources\c90\common\__lldiv.c"
   729 ;; Parameters:    Size  Location     Type
   730 ;;  divisor         4    0[COMMON] unsigned long 
   731 ;;  dividend        4    4[COMMON] unsigned long 
   732 ;; Auto vars:     Size  Location     Type
   733 ;;  quotient        4    9[COMMON] unsigned long 
   734 ;;  counter         1   13[COMMON] unsigned char 
   735 ;; Return value:  Size  Location     Type
   736 ;;                  4    0[COMMON] unsigned long 
   737 ;; Registers used:
   738 ;;		wreg, status,2, status,0
   739 ;; Tracked objects:
   740 ;;		On entry : 0/0
   741 ;;		On exit  : 0/0
   742 ;;		Unchanged: 0/0
   743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   744 ;;      Params:         8       0       0       0       0
   745 ;;      Locals:         5       0       0       0       0
   746 ;;      Temps:          1       0       0       0       0
   747 ;;      Totals:        14       0       0       0       0
   748 ;;Total ram usage:       14 bytes
   749 ;; Hardware stack levels used: 1
   750 ;; This function calls:
   751 ;;		Nothing
   752 ;; This function is called by:
   753 ;;		_init_uart
   754 ;; This function uses a non-reentrant model
   755 ;;
   756                           
   757  0796                     ___lldiv:	
   758                           ;psect for function ___lldiv
   759                           
   760  0796                     l702:	
   761                           ;incstack = 0
   762                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
   763                           
   764  0796  3000               	movlw	0
   765  0797  00FC               	movwf	___lldiv@quotient+3
   766  0798  3000               	movlw	0
   767  0799  00FB               	movwf	___lldiv@quotient+2
   768  079A  3000               	movlw	0
   769  079B  00FA               	movwf	___lldiv@quotient+1
   770  079C  3000               	movlw	0
   771  079D  00F9               	movwf	___lldiv@quotient
   772  079E  0873               	movf	___lldiv@divisor+3,w
   773  079F  0472               	iorwf	___lldiv@divisor+2,w
   774  07A0  0471               	iorwf	___lldiv@divisor+1,w
   775  07A1  0470               	iorwf	___lldiv@divisor,w
   776  07A2  1903               	skipnz
   777  07A3  2FA5               	goto	u131
   778  07A4  2FA6               	goto	u130
   779  07A5                     u131:
   780  07A5  2FF3               	goto	l722
   781  07A6                     u130:
   782  07A6                     l704:
   783  07A6  01FD               	clrf	___lldiv@counter
   784  07A7  0AFD               	incf	___lldiv@counter,f
   785  07A8  2FB6               	goto	l708
   786  07A9                     l706:
   787  07A9  3001               	movlw	1
   788  07AA  00F8               	movwf	??___lldiv
   789  07AB                     u145:
   790  07AB  1003               	clrc
   791  07AC  0DF0               	rlf	___lldiv@divisor,f
   792  07AD  0DF1               	rlf	___lldiv@divisor+1,f
   793  07AE  0DF2               	rlf	___lldiv@divisor+2,f
   794  07AF  0DF3               	rlf	___lldiv@divisor+3,f
   795  07B0  0BF8               	decfsz	??___lldiv,f
   796  07B1  2FAB               	goto	u145
   797  07B2  3001               	movlw	1
   798  07B3  00F8               	movwf	??___lldiv
   799  07B4  0878               	movf	??___lldiv,w
   800  07B5  07FD               	addwf	___lldiv@counter,f
   801  07B6                     l708:
   802  07B6  1FF3               	btfss	___lldiv@divisor+3,7
   803  07B7  2FB9               	goto	u151
   804  07B8  2FBA               	goto	u150
   805  07B9                     u151:
   806  07B9  2FA9               	goto	l706
   807  07BA                     u150:
   808  07BA                     l710:
   809  07BA  3001               	movlw	1
   810  07BB  00F8               	movwf	??___lldiv
   811  07BC                     u165:
   812  07BC  1003               	clrc
   813  07BD  0DF9               	rlf	___lldiv@quotient,f
   814  07BE  0DFA               	rlf	___lldiv@quotient+1,f
   815  07BF  0DFB               	rlf	___lldiv@quotient+2,f
   816  07C0  0DFC               	rlf	___lldiv@quotient+3,f
   817  07C1  0BF8               	decfsz	??___lldiv,f
   818  07C2  2FBC               	goto	u165
   819  07C3                     l712:
   820  07C3  0873               	movf	___lldiv@divisor+3,w
   821  07C4  0277               	subwf	___lldiv@dividend+3,w
   822  07C5  1D03               	skipz
   823  07C6  2FD1               	goto	u175
   824  07C7  0872               	movf	___lldiv@divisor+2,w
   825  07C8  0276               	subwf	___lldiv@dividend+2,w
   826  07C9  1D03               	skipz
   827  07CA  2FD1               	goto	u175
   828  07CB  0871               	movf	___lldiv@divisor+1,w
   829  07CC  0275               	subwf	___lldiv@dividend+1,w
   830  07CD  1D03               	skipz
   831  07CE  2FD1               	goto	u175
   832  07CF  0870               	movf	___lldiv@divisor,w
   833  07D0  0274               	subwf	___lldiv@dividend,w
   834  07D1                     u175:
   835  07D1  1C03               	skipc
   836  07D2  2FD4               	goto	u171
   837  07D3  2FD5               	goto	u170
   838  07D4                     u171:
   839  07D4  2FE4               	goto	l718
   840  07D5                     u170:
   841  07D5                     l714:
   842  07D5  0870               	movf	___lldiv@divisor,w
   843  07D6  02F4               	subwf	___lldiv@dividend,f
   844  07D7  0871               	movf	___lldiv@divisor+1,w
   845  07D8  1C03               	skipc
   846  07D9  0F71               	incfsz	___lldiv@divisor+1,w
   847  07DA  02F5               	subwf	___lldiv@dividend+1,f
   848  07DB  0872               	movf	___lldiv@divisor+2,w
   849  07DC  1C03               	skipc
   850  07DD  0F72               	incfsz	___lldiv@divisor+2,w
   851  07DE  02F6               	subwf	___lldiv@dividend+2,f
   852  07DF  0873               	movf	___lldiv@divisor+3,w
   853  07E0  1C03               	skipc
   854  07E1  0F73               	incfsz	___lldiv@divisor+3,w
   855  07E2  02F7               	subwf	___lldiv@dividend+3,f
   856  07E3                     l716:
   857  07E3  1479               	bsf	___lldiv@quotient,0
   858  07E4                     l718:
   859  07E4  3001               	movlw	1
   860  07E5                     u185:
   861  07E5  1003               	clrc
   862  07E6  0CF3               	rrf	___lldiv@divisor+3,f
   863  07E7  0CF2               	rrf	___lldiv@divisor+2,f
   864  07E8  0CF1               	rrf	___lldiv@divisor+1,f
   865  07E9  0CF0               	rrf	___lldiv@divisor,f
   866  07EA  3EFF               	addlw	-1
   867  07EB  1D03               	skipz
   868  07EC  2FE5               	goto	u185
   869  07ED                     l720:
   870  07ED  3001               	movlw	1
   871  07EE  02FD               	subwf	___lldiv@counter,f
   872  07EF  1D03               	btfss	3,2
   873  07F0  2FF2               	goto	u191
   874  07F1  2FF3               	goto	u190
   875  07F2                     u191:
   876  07F2  2FBA               	goto	l710
   877  07F3                     u190:
   878  07F3                     l722:
   879  07F3  087C               	movf	___lldiv@quotient+3,w
   880  07F4  00F3               	movwf	?___lldiv+3
   881  07F5  087B               	movf	___lldiv@quotient+2,w
   882  07F6  00F2               	movwf	?___lldiv+2
   883  07F7  087A               	movf	___lldiv@quotient+1,w
   884  07F8  00F1               	movwf	?___lldiv+1
   885  07F9  0879               	movf	___lldiv@quotient,w
   886  07FA  00F0               	movwf	?___lldiv
   887  07FB                     l176:
   888  07FB  0008               	return
   889  07FC                     __end_of___lldiv:
   890                           
   891                           	psect	text6
   892  0704                     __ptext6:	
   893 ;; *************** function _getchar *****************
   894 ;; Defined at:
   895 ;;		line 16 in file "uart.c"
   896 ;; Parameters:    Size  Location     Type
   897 ;;		None
   898 ;; Auto vars:     Size  Location     Type
   899 ;;		None
   900 ;; Return value:  Size  Location     Type
   901 ;;                  1    wreg      unsigned char 
   902 ;; Registers used:
   903 ;;		wreg
   904 ;; Tracked objects:
   905 ;;		On entry : 0/0
   906 ;;		On exit  : 0/0
   907 ;;		Unchanged: 0/0
   908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   909 ;;      Params:         0       0       0       0       0
   910 ;;      Locals:         0       0       0       0       0
   911 ;;      Temps:          0       0       0       0       0
   912 ;;      Totals:         0       0       0       0       0
   913 ;;Total ram usage:        0 bytes
   914 ;; Hardware stack levels used: 1
   915 ;; This function calls:
   916 ;;		Nothing
   917 ;; This function is called by:
   918 ;;		_main
   919 ;; This function uses a non-reentrant model
   920 ;;
   921                           
   922  0704                     _getchar:	
   923                           ;psect for function _getchar
   924                           
   925  0704                     l742:	
   926                           ;incstack = 0
   927                           ; Regs used in _getchar: [wreg]
   928                           
   929  0704                     l39:	
   930                           ;uart.c: 22:     }
   931                           
   932                           
   933                           ;uart.c: 19:     while (RCIF != 1)
   934  0704  1283               	bcf	3,5	;RP0=0, select bank0
   935  0705  1303               	bcf	3,6	;RP1=0, select bank0
   936  0706  1E8C               	btfss	12,5	;volatile
   937  0707  2F09               	goto	u221
   938  0708  2F0A               	goto	u220
   939  0709                     u221:
   940  0709  2F04               	goto	l39
   941  070A                     u220:
   942  070A                     l41:
   943                           
   944                           ;uart.c: 25:     RCIF = 0;
   945  070A  128C               	bcf	12,5	;volatile
   946  070B                     l744:
   947                           
   948                           ;uart.c: 28:     return RCREG;
   949  070B  081A               	movf	26,w	;volatile
   950  070C                     l42:
   951  070C  0008               	return
   952  070D                     __end_of_getchar:
   953  007E                     btemp	set	126	;btemp
   954  007E                     wtemp0	set	126
   955                           
   956                           	psect	config
   957                           
   958                           ;Config register CONFIG @ 0x2007
   959                           ;	Oscillator Selection bits
   960                           ;	FOSC = 0x3, unprogrammed default
   961                           ;	Watchdog Timer Enable bit
   962                           ;	WDTE = OFF, WDT disabled
   963                           ;	Power-up Timer Enable bit
   964                           ;	PWRTE = 0x1, unprogrammed default
   965                           ;	Brown-out Reset Enable bit
   966                           ;	BOREN = 0x1, unprogrammed default
   967                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   968                           ;	LVP = 0x1, unprogrammed default
   969                           ;	Data EEPROM Memory Code Protection bit
   970                           ;	CPD = 0x1, unprogrammed default
   971                           ;	Flash Program Memory Write Enable bits
   972                           ;	WRT = 0x3, unprogrammed default
   973                           ;	In-Circuit Debugger Mode bit
   974                           ;	DEBUG = 0x1, unprogrammed default
   975                           ;	Flash Program Memory Code Protection bit
   976                           ;	CP = 0x1, unprogrammed default
   977  2007                     	org	8199
   978  2007  3FFB               	dw	16379

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     10      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    puts@s	PTR const unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _puts->_putchar
    _init_uart->___lldiv

Critical Paths under _main in BANK0

    _init_config->_init_uart

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     557
                                              8 BANK0      2     2      0
                            _getchar
                        _init_config
                            _putchar
 ---------------------------------------------------------------------------------
 (1) _init_config                                          0     0      0     512
                          _init_uart
                               _puts
 ---------------------------------------------------------------------------------
 (2) _puts                                                 2     2      0     100
                                              1 COMMON     2     2      0
                            _putchar
 ---------------------------------------------------------------------------------
 (1) _putchar                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _init_uart                                            8     4      4     412
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             14     6      8     314
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (1) _getchar                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _getchar
   _init_config
     _init_uart
       ___lldiv
     _puts
       _putchar
   _putchar

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      A       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Sun Sep 04 02:46:04 2022

                      pc 0002                       l11 072D                       l41 070A  
                     l42 070C                       l36 0795                       l46 0712  
                     l54 0765                       l39 0704                       l47 0716  
                     l48 0717                       fsr 0004                      l176 07FB  
                    l700 070E                      l710 07BA                      l702 0796  
                    l720 07ED                      l712 07C3                      l704 07A6  
                    l714 07D5                      l706 07A9                      l722 07F3  
                    l730 0748                      l716 07E3                      l708 07B6  
                    l732 0749                      l740 0727                      l742 0704  
                    l718 07E4                      l726 0766                      l734 0755  
                    l750 0733                      l744 070B                      l728 076A  
                    l736 0759                      l752 073D                      l738 0718  
                    l748 072E                      u200 0778                      u120 0716  
                    u121 0715                      u130 07A6                      u210 0765  
                    u131 07A5                      u211 0764                      u220 070A  
                    u221 0709                      u205 0773                      u150 07BA  
                    u151 07B9                      u145 07AB                      u170 07D5  
                    u171 07D4                      u165 07BC                      u190 07F3  
                    u191 07F2                      u175 07D1                      u185 07E5  
                    fsr0 0004                     STR_1 0009                     _CREN 00C4  
                   _RCIF 0065                     _SPEN 00C7                     _TXIF 0064  
                   _main 072E                     btemp 007E                     _puts 0747  
                   start 0000                    ?_main 0070                    ?_puts 0070  
        __end_of___lldiv 07FC             ?_init_config 0070                    _RCREG 001A  
                  _SPBRG 0099                    _TXREG 0019          __end_of_getchar 070D  
                  pclath 000A                    puts@s 0072          __end_of_putchar 0718  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 0747             __end_of_puts 0766                   ??_main 0028  
                 ??_puts 0071                ??___lldiv 0078                   main@ch 0029  
              ??_getchar 0070                ??_putchar 0070  __end_of__initialization 07FC  
         __pcstackCOMMON 0070               __pmaintext 072E               __stringtab 0003  
                ___lldiv 0796                  __ptext1 0718                  __ptext2 0747  
                __ptext3 070D                  __ptext4 0766                  __ptext5 0796  
                __ptext6 0704                  _getchar 0704        __end_of_init_uart 0796  
                _putchar 070D     end_of_initialization 07FC          ___lldiv@divisor 0070  
        ___lldiv@counter 007D      start_initialization 07FC              putchar@data 0070  
          ??_init_config 007E                ___latbits 0002            __pcstackBANK0 0020  
               ?___lldiv 0070                __pstrings 0003                 ?_getchar 0070  
               ?_putchar 0070      __end_of_init_config 072E                _init_uart 0766  
            __stringbase 0008               ?_init_uart 0020       __end_of__stringtab 0009  
            _init_config 0718              ??_init_uart 0024            init_uart@baud 0020  
       ___lldiv@dividend 0074                stringcode 0003         ___lldiv@quotient 0079  
               stringdir 0003                 stringtab 0003  
