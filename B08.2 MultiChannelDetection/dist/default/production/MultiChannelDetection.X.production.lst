

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Wed Sep 22 12:00:27 2021

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.10
    22                           ; Generated 31/07/2019 GMT
    23                           ; 
    24                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001D                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  0081                     	;# 
   211  0085                     	;# 
   212  0086                     	;# 
   213  0087                     	;# 
   214  0088                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001D                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  0081                     	;# 
   271  0085                     	;# 
   272  0086                     	;# 
   273  0087                     	;# 
   274  0088                     	;# 
   275  0089                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0008                     _PORTD	set	8
   296  001E                     _ADRESH	set	30
   297  001F                     _ADCON0	set	31
   298  0049                     _RE1	set	73
   299  004A                     _RE2	set	74
   300  00FA                     _nDONE	set	250
   301  00FA                     _GO	set	250
   302  00F8                     _ADON	set	248
   303  0088                     _TRISD	set	136
   304  009E                     _ADRESL	set	158
   305  0449                     _TRISE1	set	1097
   306  044A                     _TRISE2	set	1098
   307  04FF                     _ADFM	set	1279
   308                           
   309                           	psect	strings
   310  0003                     __pstrings:	
   311  0003                     stringtab:	
   312  0003                     __stringtab:	
   313                           
   314                           ;	String table - string pointers are 1 byte each
   315  0003  1BFF               	btfsc	btemp+1,7
   316  0004  280D               	ljmp	stringcode
   317  0005  1383               	bcf	3,7
   318  0006  187F               	btfsc	btemp+1,0
   319  0007  1783               	bsf	3,7
   320  0008  0800               	movf	0,w
   321  0009  0A84               	incf	4,f
   322  000A  1903               	skipnz
   323  000B  0AFF               	incf	btemp+1,f
   324  000C  0008               	return
   325  000D                     stringcode:	
   326  000D                     stringdir:	
   327  000D  3000               	movlw	high stringdir
   328  000E  008A               	movwf	10
   329  000F  0804               	movf	4,w
   330  0010  0A84               	incf	4,f
   331  0011  0782               	addwf	2,f
   332  0012                     __stringbase:	
   333  0012  3400               	retlw	0
   334  0013                     __end_of__stringtab:	
   335  0013                     STR_3:	
   336  0013  3441               	retlw	65	;'A'
   337  0014  3444               	retlw	68	;'D'
   338  0015  3443               	retlw	67	;'C'
   339  0016  3420               	retlw	32	;' '
   340  0017  3454               	retlw	84	;'T'
   341  0018  3465               	retlw	101	;'e'
   342  0019  3473               	retlw	115	;'s'
   343  001A  3474               	retlw	116	;'t'
   344  001B  3400               	retlw	0
   345  001C                     STR_1:	
   346  001C  3443               	retlw	67	;'C'
   347  001D  3430               	retlw	48	;'0'
   348  001E  343A               	retlw	58	;':'
   349  001F  3400               	retlw	0
   350  0020                     STR_2:	
   351  0020  3443               	retlw	67	;'C'
   352  0021  3431               	retlw	49	;'1'
   353  0022  343A               	retlw	58	;':'
   354  0023  3400               	retlw	0
   355                           
   356                           ; #config settings
   357  0000                     
   358                           	psect	cinit
   359  07FC                     start_initialization:	
   360  07FC                     __initialization:	
   361  07FC                     end_of_initialization:	
   362                           ;End of C runtime variable initialization code
   363                           
   364  07FC                     __end_of__initialization:	
   365  07FC  0183               	clrf	3
   366  07FD  120A  118A  2DD3   	ljmp	_main	;jump to C main() function
   367                           
   368                           	psect	cstackCOMMON
   369  0070                     __pcstackCOMMON:	
   370  0070                     ?_init_clcd:	
   371  0070                     ?_init_adc:	
   372                           ; 1 bytes @ 0x0
   373                           
   374  0070                     ??_init_adc:	
   375                           ; 1 bytes @ 0x0
   376                           
   377  0070                     ?_init_config:	
   378                           ; 1 bytes @ 0x0
   379                           
   380  0070                     ?_main:	
   381                           ; 1 bytes @ 0x0
   382                           
   383  0070                     ?_clcd_write:	
   384                           ; 1 bytes @ 0x0
   385                           
   386  0070                     ?_init_display_controller:	
   387                           ; 1 bytes @ 0x0
   388                           
   389  0070                     ?_read_adc:	
   390                           ; 1 bytes @ 0x0
   391                           
   392  0070                     ?___lwdiv:	
   393                           ; 2 bytes @ 0x0
   394                           
   395  0070                     ?___lwmod:	
   396                           ; 2 bytes @ 0x0
   397                           
   398  0070                     clcd_write@mode:	
   399                           ; 2 bytes @ 0x0
   400                           
   401  0070                     ___lwdiv@divisor:	
   402                           ; 1 bytes @ 0x0
   403                           
   404  0070                     ___lwmod@divisor:	
   405                           ; 2 bytes @ 0x0
   406                           
   407                           
   408                           ; 2 bytes @ 0x0
   409  0070                     	ds	1
   410  0071                     ??_clcd_write:	
   411                           
   412                           ; 1 bytes @ 0x1
   413  0071                     	ds	1
   414  0072                     ??_read_adc:	
   415  0072                     ___lwdiv@dividend:	
   416                           ; 1 bytes @ 0x2
   417                           
   418  0072                     ___lwmod@dividend:	
   419                           ; 2 bytes @ 0x2
   420                           
   421                           
   422                           ; 2 bytes @ 0x2
   423  0072                     	ds	1
   424  0073                     clcd_write@byte:	
   425  0073                     read_adc@adc_reg_val:	
   426                           ; 1 bytes @ 0x3
   427                           
   428                           
   429                           ; 2 bytes @ 0x3
   430  0073                     	ds	1
   431  0074                     ?_clcd_print:	
   432  0074                     ??_init_display_controller:	
   433                           ; 1 bytes @ 0x4
   434                           
   435  0074                     ??___lwdiv:	
   436                           ; 1 bytes @ 0x4
   437                           
   438  0074                     ??___lwmod:	
   439                           ; 1 bytes @ 0x4
   440                           
   441  0074                     clcd_print@str:	
   442                           ; 1 bytes @ 0x4
   443                           
   444                           
   445                           ; 2 bytes @ 0x4
   446  0074                     	ds	1
   447  0075                     read_adc@channel:	
   448  0075                     ___lwmod@counter:	
   449                           ; 1 bytes @ 0x5
   450                           
   451  0075                     ___lwdiv@quotient:	
   452                           ; 1 bytes @ 0x5
   453                           
   454                           
   455                           ; 2 bytes @ 0x5
   456  0075                     	ds	1
   457  0076                     ??_init_clcd:	
   458  0076                     clcd_print@addr:	
   459                           ; 1 bytes @ 0x6
   460                           
   461                           
   462                           ; 1 bytes @ 0x6
   463  0076                     	ds	1
   464  0077                     ??_clcd_print:	
   465  0077                     ??_init_config:	
   466                           ; 1 bytes @ 0x7
   467                           
   468  0077                     ___lwdiv@counter:	
   469                           ; 1 bytes @ 0x7
   470                           
   471                           
   472                           ; 1 bytes @ 0x7
   473  0077                     	ds	1
   474  0078                     ?_display:	
   475  0078                     display@adc_reg_val_1:	
   476                           ; 1 bytes @ 0x8
   477                           
   478                           
   479                           ; 2 bytes @ 0x8
   480  0078                     	ds	2
   481  007A                     display@adc_reg_val_2:	
   482                           
   483                           ; 2 bytes @ 0xA
   484  007A                     	ds	2
   485  007C                     ??_display:	
   486                           
   487                           ; 1 bytes @ 0xC
   488  007C                     	ds	1
   489  007D                     ??_main:	
   490                           
   491                           	psect	cstackBANK0
   492  0020                     __pcstackBANK0:	
   493                           ; 1 bytes @ 0xD
   494                           
   495  0020                     display@buff:	
   496                           
   497                           ; 5 bytes @ 0x0
   498  0020                     	ds	5
   499  0025                     display@i:	
   500                           
   501                           ; 2 bytes @ 0x5
   502  0025                     	ds	2
   503  0027                     main@adc_reg_val_1:	
   504                           
   505                           ; 2 bytes @ 0x7
   506  0027                     	ds	2
   507  0029                     main@adc_reg_val_2:	
   508                           
   509                           ; 2 bytes @ 0x9
   510  0029                     	ds	2
   511                           
   512                           	psect	maintext
   513  05D3                     __pmaintext:	
   514 ;;
   515 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   516 ;;
   517 ;; *************** function _main *****************
   518 ;; Defined at:
   519 ;;		line 50 in file "main.c"
   520 ;; Parameters:    Size  Location     Type
   521 ;;		None
   522 ;; Auto vars:     Size  Location     Type
   523 ;;  adc_reg_val_    2    9[BANK0 ] unsigned short 
   524 ;;  adc_reg_val_    2    7[BANK0 ] unsigned short 
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : B00/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   534 ;;      Params:         0       0       0       0       0
   535 ;;      Locals:         0       4       0       0       0
   536 ;;      Temps:          0       0       0       0       0
   537 ;;      Totals:         0       4       0       0       0
   538 ;;Total ram usage:        4 bytes
   539 ;; Hardware stack levels required when called:    4
   540 ;; This function calls:
   541 ;;		_display
   542 ;;		_init_config
   543 ;;		_read_adc
   544 ;; This function is called by:
   545 ;;		Startup code after reset
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           
   549                           
   550                           ;psect for function _main
   551  05D3                     _main:	
   552  05D3                     l985:	
   553                           ;incstack = 0
   554                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   555                           
   556                           
   557                           ;main.c: 51:     return;
   558  05D3  120A  118A  259C  120A  118A  	fcall	_init_config
   559  05D8                     l987:	
   560  05D8  3000               	movlw	0
   561  05D9  120A  118A  25B4  120A  118A  	fcall	_read_adc
   562  05DE  0871               	movf	?_read_adc+1,w
   563  05DF  1283               	bcf	3,5	;RP0=0, select bank0
   564  05E0  1303               	bcf	3,6	;RP1=0, select bank0
   565  05E1  00A8               	movwf	main@adc_reg_val_1+1
   566  05E2  0870               	movf	?_read_adc,w
   567  05E3  00A7               	movwf	main@adc_reg_val_1
   568  05E4                     l989:	
   569  05E4  3001               	movlw	1
   570  05E5  120A  118A  25B4  120A  118A  	fcall	_read_adc
   571  05EA  0871               	movf	?_read_adc+1,w
   572  05EB  1283               	bcf	3,5	;RP0=0, select bank0
   573  05EC  1303               	bcf	3,6	;RP1=0, select bank0
   574  05ED  00AA               	movwf	main@adc_reg_val_2+1
   575  05EE  0870               	movf	?_read_adc,w
   576  05EF  00A9               	movwf	main@adc_reg_val_2
   577  05F0  0828               	movf	main@adc_reg_val_1+1,w
   578  05F1  00F9               	movwf	display@adc_reg_val_1+1
   579  05F2  0827               	movf	main@adc_reg_val_1,w
   580  05F3  00F8               	movwf	display@adc_reg_val_1
   581  05F4  082A               	movf	main@adc_reg_val_2+1,w
   582  05F5  00FB               	movwf	display@adc_reg_val_2+1
   583  05F6  0829               	movf	main@adc_reg_val_2,w
   584  05F7  00FA               	movwf	display@adc_reg_val_2
   585  05F8  120A  118A  2747  120A  118A  	fcall	_display
   586  05FD  2DD8               	goto	l987
   587  05FE  120A  118A  2800   	ljmp	start
   588  0601                     __end_of_main:	
   589                           
   590                           	psect	text1
   591  05B4                     __ptext1:	
   592 ;; *************** function _read_adc *****************
   593 ;; Defined at:
   594 ;;		line 12 in file "adc.c"
   595 ;; Parameters:    Size  Location     Type
   596 ;;  channel         1    wreg     unsigned char 
   597 ;; Auto vars:     Size  Location     Type
   598 ;;  channel         1    5[COMMON] unsigned char 
   599 ;;  adc_reg_val     2    3[COMMON] unsigned short 
   600 ;; Return value:  Size  Location     Type
   601 ;;                  2    0[COMMON] unsigned short 
   602 ;; Registers used:
   603 ;;		wreg, status,2, status,0
   604 ;; Tracked objects:
   605 ;;		On entry : 0/0
   606 ;;		On exit  : 0/0
   607 ;;		Unchanged: 0/0
   608 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   609 ;;      Params:         2       0       0       0       0
   610 ;;      Locals:         3       0       0       0       0
   611 ;;      Temps:          1       0       0       0       0
   612 ;;      Totals:         6       0       0       0       0
   613 ;;Total ram usage:        6 bytes
   614 ;; Hardware stack levels used:    1
   615 ;; This function calls:
   616 ;;		Nothing
   617 ;; This function is called by:
   618 ;;		_main
   619 ;; This function uses a non-reentrant model
   620 ;;
   621                           
   622                           
   623                           ;psect for function _read_adc
   624  05B4                     _read_adc:	
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _read_adc: [wreg+status,2+status,0]
   628                           ;read_adc@channel stored from wreg
   629  05B4  00F5               	movwf	read_adc@channel
   630  05B5                     l943:	
   631                           
   632                           ;adc.c: 12: unsigned short read_adc(unsigned char channel);adc.c: 13: {;adc.c: 14:     u
      +                          nsigned short adc_reg_val;;adc.c: 17:     ADCON0 = (ADCON0 & 0xC7) | (channel << 3);
   633  05B5  0875               	movf	read_adc@channel,w
   634  05B6  00F2               	movwf	??_read_adc
   635  05B7  3003               	movlw	3
   636  05B8                     u395:	
   637  05B8  1003               	clrc
   638  05B9  0DF2               	rlf	??_read_adc,f
   639  05BA  3EFF               	addlw	-1
   640  05BB  1D03               	skipz
   641  05BC  2DB8               	goto	u395
   642  05BD  1283               	bcf	3,5	;RP0=0, select bank0
   643  05BE  1303               	bcf	3,6	;RP1=0, select bank0
   644  05BF  081F               	movf	31,w	;volatile
   645  05C0  39C7               	andlw	199
   646  05C1  0472               	iorwf	??_read_adc,w
   647  05C2  009F               	movwf	31	;volatile
   648  05C3                     l945:	
   649                           
   650                           ;adc.c: 20:     GO = 1;
   651  05C3  151F               	bsf	31,2	;volatile
   652  05C4                     l20:	
   653                           ;adc.c: 22:     while (nDONE);
   654                           
   655  05C4  191F               	btfsc	31,2	;volatile
   656  05C5  2DC7               	goto	u401
   657  05C6  2DC8               	goto	u400
   658  05C7                     u401:	
   659  05C7  2DC4               	goto	l20
   660  05C8                     u400:	
   661  05C8                     l947:	
   662                           
   663                           ;adc.c: 24:     adc_reg_val = (ADRESH << 8) | ADRESL;
   664  05C8  081E               	movf	30,w	;volatile
   665  05C9  00F4               	movwf	read_adc@adc_reg_val+1
   666  05CA  1683               	bsf	3,5	;RP0=1, select bank1
   667  05CB  1303               	bcf	3,6	;RP1=0, select bank1
   668  05CC  081E               	movf	30,w	;volatile
   669  05CD  00F3               	movwf	read_adc@adc_reg_val
   670                           
   671                           ;adc.c: 26:     return adc_reg_val;
   672  05CE  0874               	movf	read_adc@adc_reg_val+1,w
   673  05CF  00F1               	movwf	?_read_adc+1
   674  05D0  0873               	movf	read_adc@adc_reg_val,w
   675  05D1  00F0               	movwf	?_read_adc
   676  05D2                     l23:	
   677  05D2  0008               	return
   678  05D3                     __end_of_read_adc:	
   679                           
   680                           	psect	text2
   681  059C                     __ptext2:	
   682 ;; *************** function _init_config *****************
   683 ;; Defined at:
   684 ;;		line 43 in file "main.c"
   685 ;; Parameters:    Size  Location     Type
   686 ;;		None
   687 ;; Auto vars:     Size  Location     Type
   688 ;;		None
   689 ;; Return value:  Size  Location     Type
   690 ;;                  1    wreg      void 
   691 ;; Registers used:
   692 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   693 ;; Tracked objects:
   694 ;;		On entry : 0/0
   695 ;;		On exit  : 0/0
   696 ;;		Unchanged: 0/0
   697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   698 ;;      Params:         0       0       0       0       0
   699 ;;      Locals:         0       0       0       0       0
   700 ;;      Temps:          1       0       0       0       0
   701 ;;      Totals:         1       0       0       0       0
   702 ;;Total ram usage:        1 bytes
   703 ;; Hardware stack levels used:    1
   704 ;; Hardware stack levels required when called:    3
   705 ;; This function calls:
   706 ;;		_clcd_print
   707 ;;		_init_adc
   708 ;;		_init_clcd
   709 ;; This function is called by:
   710 ;;		_main
   711 ;; This function uses a non-reentrant model
   712 ;;
   713                           
   714                           
   715                           ;psect for function _init_config
   716  059C                     _init_config:	
   717  059C                     l979:	
   718                           ;incstack = 0
   719                           ; Regs used in _init_config: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   720                           
   721                           
   722                           ;main.c: 44:         adc_reg_val_1 = read_adc(0x00);
   723  059C  120A  118A  2591  120A  118A  	fcall	_init_clcd
   724  05A1                     l981:	
   725                           
   726                           ;main.c: 45: 
   727  05A1  120A  118A  258A  120A  118A  	fcall	_init_adc
   728  05A6                     l983:	
   729                           
   730                           ;main.c: 47:         adc_reg_val_2 = read_adc(0x01);
   731  05A6  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   732  05A7  00F4               	movwf	clcd_print@str
   733  05A8  3080               	movlw	128
   734  05A9  00F5               	movwf	clcd_print@str+1
   735  05AA  3084               	movlw	132
   736  05AB  00F7               	movwf	??_init_config
   737  05AC  0877               	movf	??_init_config,w
   738  05AD  00F6               	movwf	clcd_print@addr
   739  05AE  120A  118A  2601  120A  118A  	fcall	_clcd_print
   740  05B3                     l41:	
   741  05B3  0008               	return
   742  05B4                     __end_of_init_config:	
   743                           
   744                           	psect	text3
   745  0591                     __ptext3:	
   746 ;; *************** function _init_clcd *****************
   747 ;; Defined at:
   748 ;;		line 44 in file "clcd.c"
   749 ;; Parameters:    Size  Location     Type
   750 ;;		None
   751 ;; Auto vars:     Size  Location     Type
   752 ;;		None
   753 ;; Return value:  Size  Location     Type
   754 ;;                  1    wreg      void 
   755 ;; Registers used:
   756 ;;		wreg, status,2, status,0, pclath, cstack
   757 ;; Tracked objects:
   758 ;;		On entry : 0/0
   759 ;;		On exit  : 0/0
   760 ;;		Unchanged: 0/0
   761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   762 ;;      Params:         0       0       0       0       0
   763 ;;      Locals:         0       0       0       0       0
   764 ;;      Temps:          0       0       0       0       0
   765 ;;      Totals:         0       0       0       0       0
   766 ;;Total ram usage:        0 bytes
   767 ;; Hardware stack levels used:    1
   768 ;; Hardware stack levels required when called:    2
   769 ;; This function calls:
   770 ;;		_init_display_controller
   771 ;; This function is called by:
   772 ;;		_init_config
   773 ;; This function uses a non-reentrant model
   774 ;;
   775                           
   776                           
   777                           ;psect for function _init_clcd
   778  0591                     _init_clcd:	
   779  0591                     l887:	
   780                           ;incstack = 0
   781                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
   782                           
   783                           
   784                           ;clcd.c: 47:     TRISD = 0x00;
   785  0591  1683               	bsf	3,5	;RP0=1, select bank1
   786  0592  1303               	bcf	3,6	;RP1=0, select bank1
   787  0593  0188               	clrf	8	;volatile
   788  0594                     l889:	
   789                           
   790                           ;clcd.c: 50:     TRISE2 = 0;
   791  0594  1109               	bcf	9,2	;volatile
   792  0595                     l891:	
   793                           
   794                           ;clcd.c: 51:     TRISE1 = 0;
   795  0595  1089               	bcf	9,1	;volatile
   796  0596                     l893:	
   797                           
   798                           ;clcd.c: 53:     init_display_controller();
   799  0596  120A  118A  26E4  120A  118A  	fcall	_init_display_controller
   800  059B                     l72:	
   801  059B  0008               	return
   802  059C                     __end_of_init_clcd:	
   803                           
   804                           	psect	text4
   805  06E4                     __ptext4:	
   806 ;; *************** function _init_display_controller *****************
   807 ;; Defined at:
   808 ;;		line 21 in file "clcd.c"
   809 ;; Parameters:    Size  Location     Type
   810 ;;		None
   811 ;; Auto vars:     Size  Location     Type
   812 ;;		None
   813 ;; Return value:  Size  Location     Type
   814 ;;                  1    wreg      void 
   815 ;; Registers used:
   816 ;;		wreg, status,2, status,0, pclath, cstack
   817 ;; Tracked objects:
   818 ;;		On entry : 0/0
   819 ;;		On exit  : 0/0
   820 ;;		Unchanged: 0/0
   821 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   822 ;;      Params:         0       0       0       0       0
   823 ;;      Locals:         0       0       0       0       0
   824 ;;      Temps:          2       0       0       0       0
   825 ;;      Totals:         2       0       0       0       0
   826 ;;Total ram usage:        2 bytes
   827 ;; Hardware stack levels used:    1
   828 ;; Hardware stack levels required when called:    1
   829 ;; This function calls:
   830 ;;		_clcd_write
   831 ;; This function is called by:
   832 ;;		_init_clcd
   833 ;; This function uses a non-reentrant model
   834 ;;
   835                           
   836                           
   837                           ;psect for function _init_display_controller
   838  06E4                     _init_display_controller:	
   839  06E4                     l853:	
   840                           ;incstack = 0
   841                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
   842                           
   843                           
   844                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
   845  06E4  30C3               	movlw	195
   846  06E5  00F5               	movwf	??_init_display_controller+1
   847  06E6  30CD               	movlw	205
   848  06E7  00F4               	movwf	??_init_display_controller
   849  06E8                     u437:	
   850  06E8  0BF4               	decfsz	??_init_display_controller,f
   851  06E9  2EE8               	goto	u437
   852  06EA  0BF5               	decfsz	??_init_display_controller+1,f
   853  06EB  2EE8               	goto	u437
   854  06EC                     l855:	
   855                           
   856                           ;clcd.c: 27:     clcd_write(0x33, 0);
   857  06EC  01F0               	clrf	clcd_write@mode
   858  06ED  3033               	movlw	51
   859  06EE  120A  118A  2630  120A  118A  	fcall	_clcd_write
   860  06F3                     l857:	
   861                           
   862                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
   863  06F3  301B               	movlw	27
   864  06F4  00F5               	movwf	??_init_display_controller+1
   865  06F5  309E               	movlw	158
   866  06F6  00F4               	movwf	??_init_display_controller
   867  06F7                     u447:	
   868  06F7  0BF4               	decfsz	??_init_display_controller,f
   869  06F8  2EF7               	goto	u447
   870  06F9  0BF5               	decfsz	??_init_display_controller+1,f
   871  06FA  2EF7               	goto	u447
   872  06FB  0000               	nop
   873                           
   874                           ;clcd.c: 29:     clcd_write(0x33, 0);
   875  06FC  01F0               	clrf	clcd_write@mode
   876  06FD  3033               	movlw	51
   877  06FE  120A  118A  2630  120A  118A  	fcall	_clcd_write
   878  0703                     l859:	
   879                           
   880                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   881  0703  30A6               	movlw	166
   882  0704  00F4               	movwf	??_init_display_controller
   883  0705                     u457:	
   884  0705  0BF4               	decfsz	??_init_display_controller,f
   885  0706  2F05               	goto	u457
   886  0707  0000               	nop
   887  0708                     l861:	
   888                           
   889                           ;clcd.c: 31:     clcd_write(0x33, 0);
   890  0708  01F0               	clrf	clcd_write@mode
   891  0709  3033               	movlw	51
   892  070A  120A  118A  2630  120A  118A  	fcall	_clcd_write
   893  070F                     l863:	
   894                           
   895                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
   896  070F  2F10               	nop2	;2 cycle nop
   897  0710  2F11               	nop2	;2 cycle nop
   898  0711  0000               	nop
   899  0712                     l865:	
   900                           
   901                           ;clcd.c: 34:     clcd_write(0x02, 0);
   902  0712  01F0               	clrf	clcd_write@mode
   903  0713  3002               	movlw	2
   904  0714  120A  118A  2630  120A  118A  	fcall	_clcd_write
   905  0719                     l867:	
   906                           
   907                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   908  0719  30A6               	movlw	166
   909  071A  00F4               	movwf	??_init_display_controller
   910  071B                     u467:	
   911  071B  0BF4               	decfsz	??_init_display_controller,f
   912  071C  2F1B               	goto	u467
   913  071D  0000               	nop
   914                           
   915                           ;clcd.c: 36:     clcd_write(0x28, 0);
   916  071E  01F0               	clrf	clcd_write@mode
   917  071F  3028               	movlw	40
   918  0720  120A  118A  2630  120A  118A  	fcall	_clcd_write
   919  0725                     l869:	
   920                           
   921                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   922  0725  30A6               	movlw	166
   923  0726  00F4               	movwf	??_init_display_controller
   924  0727                     u477:	
   925  0727  0BF4               	decfsz	??_init_display_controller,f
   926  0728  2F27               	goto	u477
   927  0729  0000               	nop
   928  072A                     l871:	
   929                           
   930                           ;clcd.c: 38:     clcd_write(0x01, 0);
   931  072A  01F0               	clrf	clcd_write@mode
   932  072B  3001               	movlw	1
   933  072C  120A  118A  2630  120A  118A  	fcall	_clcd_write
   934                           
   935                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
   936  0731  3004               	movlw	4
   937  0732  00F5               	movwf	??_init_display_controller+1
   938  0733  303D               	movlw	61
   939  0734  00F4               	movwf	??_init_display_controller
   940  0735                     u487:	
   941  0735  0BF4               	decfsz	??_init_display_controller,f
   942  0736  2F35               	goto	u487
   943  0737  0BF5               	decfsz	??_init_display_controller+1,f
   944  0738  2F35               	goto	u487
   945  0739  2F3A               	nop2
   946  073A                     l873:	
   947                           
   948                           ;clcd.c: 40:     clcd_write(0x0C, 0);
   949  073A  01F0               	clrf	clcd_write@mode
   950  073B  300C               	movlw	12
   951  073C  120A  118A  2630  120A  118A  	fcall	_clcd_write
   952  0741                     l875:	
   953                           
   954                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
   955  0741  30A6               	movlw	166
   956  0742  00F4               	movwf	??_init_display_controller
   957  0743                     u497:	
   958  0743  0BF4               	decfsz	??_init_display_controller,f
   959  0744  2F43               	goto	u497
   960  0745  0000               	nop
   961  0746                     l69:	
   962  0746  0008               	return
   963  0747                     __end_of_init_display_controller:	
   964                           
   965                           	psect	text5
   966  058A                     __ptext5:	
   967 ;; *************** function _init_adc *****************
   968 ;; Defined at:
   969 ;;		line 3 in file "adc.c"
   970 ;; Parameters:    Size  Location     Type
   971 ;;		None
   972 ;; Auto vars:     Size  Location     Type
   973 ;;		None
   974 ;; Return value:  Size  Location     Type
   975 ;;                  1    wreg      void 
   976 ;; Registers used:
   977 ;;		None
   978 ;; Tracked objects:
   979 ;;		On entry : 0/0
   980 ;;		On exit  : 0/0
   981 ;;		Unchanged: 0/0
   982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   983 ;;      Params:         0       0       0       0       0
   984 ;;      Locals:         0       0       0       0       0
   985 ;;      Temps:          0       0       0       0       0
   986 ;;      Totals:         0       0       0       0       0
   987 ;;Total ram usage:        0 bytes
   988 ;; Hardware stack levels used:    1
   989 ;; This function calls:
   990 ;;		Nothing
   991 ;; This function is called by:
   992 ;;		_init_config
   993 ;; This function uses a non-reentrant model
   994 ;;
   995                           
   996                           
   997                           ;psect for function _init_adc
   998  058A                     _init_adc:	
   999  058A                     l877:	
  1000                           ;incstack = 0
  1001                           ; Regs used in _init_adc: []
  1002                           
  1003                           
  1004                           ;adc.c: 6:     ADFM = 1;
  1005  058A  1683               	bsf	3,5	;RP0=1, select bank1
  1006  058B  1303               	bcf	3,6	;RP1=0, select bank1
  1007  058C  179F               	bsf	31,7	;volatile
  1008                           
  1009                           ;adc.c: 9:     ADON = 1;
  1010  058D  1283               	bcf	3,5	;RP0=0, select bank0
  1011  058E  1303               	bcf	3,6	;RP1=0, select bank0
  1012  058F  141F               	bsf	31,0	;volatile
  1013  0590                     l17:	
  1014  0590  0008               	return
  1015  0591                     __end_of_init_adc:	
  1016                           
  1017                           	psect	text6
  1018  0747                     __ptext6:	
  1019 ;; *************** function _display *****************
  1020 ;; Defined at:
  1021 ;;		line 12 in file "main.c"
  1022 ;; Parameters:    Size  Location     Type
  1023 ;;  adc_reg_val_    2    8[COMMON] unsigned short 
  1024 ;;  adc_reg_val_    2   10[COMMON] unsigned short 
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;  buff            5    0[BANK0 ] unsigned char [5]
  1027 ;;  i               2    5[BANK0 ] int 
  1028 ;; Return value:  Size  Location     Type
  1029 ;;                  1    wreg      void 
  1030 ;; Registers used:
  1031 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1032 ;; Tracked objects:
  1033 ;;		On entry : 0/0
  1034 ;;		On exit  : 0/0
  1035 ;;		Unchanged: 0/0
  1036 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1037 ;;      Params:         4       0       0       0       0
  1038 ;;      Locals:         0       7       0       0       0
  1039 ;;      Temps:          1       0       0       0       0
  1040 ;;      Totals:         5       7       0       0       0
  1041 ;;Total ram usage:       12 bytes
  1042 ;; Hardware stack levels used:    1
  1043 ;; Hardware stack levels required when called:    2
  1044 ;; This function calls:
  1045 ;;		___lwdiv
  1046 ;;		___lwmod
  1047 ;;		_clcd_print
  1048 ;; This function is called by:
  1049 ;;		_main
  1050 ;; This function uses a non-reentrant model
  1051 ;;
  1052                           
  1053                           
  1054                           ;psect for function _display
  1055  0747                     _display:	
  1056  0747                     l951:	
  1057                           ;incstack = 0
  1058                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1059                           
  1060                           
  1061                           ;main.c: 12:         adc_reg_val_1 = adc_reg_val_1 / 10;;main.c: 13:     } while (i--);;
      +                          main.c: 14:     buff[4] = '\0';;main.c: 15: ;main.c: 17: 
  1062  0747  300A               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1063  0748  00F4               	movwf	clcd_print@str
  1064  0749  3080               	movlw	128
  1065  074A  00F5               	movwf	clcd_print@str+1
  1066  074B  30C0               	movlw	192
  1067  074C  00FC               	movwf	??_display
  1068  074D  087C               	movf	??_display,w
  1069  074E  00F6               	movwf	clcd_print@addr
  1070  074F  120A  118A  2601  120A  118A  	fcall	_clcd_print
  1071  0754                     l953:	
  1072                           
  1073                           ;main.c: 20:     i = 3;
  1074  0754  3003               	movlw	3
  1075  0755  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0756  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0757  00A5               	movwf	display@i
  1078  0758  3000               	movlw	0
  1079  0759  00A6               	movwf	display@i+1
  1080  075A                     l955:	
  1081                           
  1082                           ;main.c: 22:     {;main.c: 23:         buff[i] = (adc_reg_val_2 % 10) + '0';
  1083  075A  300A               	movlw	10
  1084  075B  00F0               	movwf	___lwmod@divisor
  1085  075C  3000               	movlw	0
  1086  075D  00F1               	movwf	___lwmod@divisor+1
  1087  075E  0879               	movf	display@adc_reg_val_1+1,w
  1088  075F  00F3               	movwf	___lwmod@dividend+1
  1089  0760  0878               	movf	display@adc_reg_val_1,w
  1090  0761  00F2               	movwf	___lwmod@dividend
  1091  0762  120A  118A  2666  120A  118A  	fcall	___lwmod
  1092  0767  0870               	movf	?___lwmod,w
  1093  0768  3E30               	addlw	48
  1094  0769  00FC               	movwf	??_display
  1095  076A  1283               	bcf	3,5	;RP0=0, select bank0
  1096  076B  1303               	bcf	3,6	;RP1=0, select bank0
  1097  076C  0825               	movf	display@i,w
  1098  076D  3E20               	addlw	(low (display@buff| 0))& (0+255)
  1099  076E  0084               	movwf	4
  1100  076F  087C               	movf	??_display,w
  1101  0770  1383               	bcf	3,7	;select IRP bank0
  1102  0771  0080               	movwf	0
  1103  0772                     l957:	
  1104                           
  1105                           ;main.c: 24:         adc_reg_val_2 = adc_reg_val_2 / 10;
  1106  0772  300A               	movlw	10
  1107  0773  00F0               	movwf	___lwdiv@divisor
  1108  0774  3000               	movlw	0
  1109  0775  00F1               	movwf	___lwdiv@divisor+1
  1110  0776  0879               	movf	display@adc_reg_val_1+1,w
  1111  0777  00F3               	movwf	___lwdiv@dividend+1
  1112  0778  0878               	movf	display@adc_reg_val_1,w
  1113  0779  00F2               	movwf	___lwdiv@dividend
  1114  077A  120A  118A  26A0  120A  118A  	fcall	___lwdiv
  1115  077F  0871               	movf	?___lwdiv+1,w
  1116  0780  00F9               	movwf	display@adc_reg_val_1+1
  1117  0781  0870               	movf	?___lwdiv,w
  1118  0782  00F8               	movwf	display@adc_reg_val_1
  1119  0783                     l959:	
  1120                           
  1121                           ;main.c: 25:     } while (i--);
  1122  0783  30FF               	movlw	255
  1123  0784  1283               	bcf	3,5	;RP0=0, select bank0
  1124  0785  1303               	bcf	3,6	;RP1=0, select bank0
  1125  0786  07A5               	addwf	display@i,f
  1126  0787  1803               	skipnc
  1127  0788  0AA6               	incf	display@i+1,f
  1128  0789  30FF               	movlw	255
  1129  078A  07A6               	addwf	display@i+1,f
  1130  078B  0A25               	incf	display@i,w
  1131  078C  1D03               	skipz
  1132  078D  2F92               	goto	u411
  1133  078E  0A26               	incf	display@i+1,w
  1134  078F  1D03               	btfss	3,2
  1135  0790  2F92               	goto	u411
  1136  0791  2F93               	goto	u410
  1137  0792                     u411:	
  1138  0792  2F5A               	goto	l955
  1139  0793                     u410:	
  1140  0793                     l961:	
  1141                           
  1142                           ;main.c: 26:     buff[4] = '\0';
  1143  0793  01A4               	clrf	display@buff+4
  1144  0794                     l963:	
  1145                           
  1146                           ;main.c: 28:     clcd_print(buff, (0xC0 + 12));
  1147  0794  3020               	movlw	(low (display@buff| 0))& (0+255)
  1148  0795  00F4               	movwf	clcd_print@str
  1149  0796  3000               	movlw	0
  1150  0797  00F5               	movwf	clcd_print@str+1
  1151  0798  30C3               	movlw	195
  1152  0799  00FC               	movwf	??_display
  1153  079A  087C               	movf	??_display,w
  1154  079B  00F6               	movwf	clcd_print@addr
  1155  079C  120A  118A  2601  120A  118A  	fcall	_clcd_print
  1156  07A1                     l965:	
  1157                           
  1158                           ;main.c: 30: 
  1159  07A1  300E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1160  07A2  00F4               	movwf	clcd_print@str
  1161  07A3  3080               	movlw	128
  1162  07A4  00F5               	movwf	clcd_print@str+1
  1163  07A5  30C9               	movlw	201
  1164  07A6  00FC               	movwf	??_display
  1165  07A7  087C               	movf	??_display,w
  1166  07A8  00F6               	movwf	clcd_print@addr
  1167  07A9  120A  118A  2601  120A  118A  	fcall	_clcd_print
  1168  07AE                     l967:	
  1169                           
  1170                           ;main.c: 32:     init_clcd();
  1171  07AE  3003               	movlw	3
  1172  07AF  1283               	bcf	3,5	;RP0=0, select bank0
  1173  07B0  1303               	bcf	3,6	;RP1=0, select bank0
  1174  07B1  00A5               	movwf	display@i
  1175  07B2  3000               	movlw	0
  1176  07B3  00A6               	movwf	display@i+1
  1177  07B4                     l969:	
  1178                           
  1179                           ;main.c: 34: ;main.c: 35:     clcd_print("ADC Test", (0x80 + 4));
  1180  07B4  300A               	movlw	10
  1181  07B5  00F0               	movwf	___lwmod@divisor
  1182  07B6  3000               	movlw	0
  1183  07B7  00F1               	movwf	___lwmod@divisor+1
  1184  07B8  087B               	movf	display@adc_reg_val_2+1,w
  1185  07B9  00F3               	movwf	___lwmod@dividend+1
  1186  07BA  087A               	movf	display@adc_reg_val_2,w
  1187  07BB  00F2               	movwf	___lwmod@dividend
  1188  07BC  120A  118A  2666  120A  118A  	fcall	___lwmod
  1189  07C1  0870               	movf	?___lwmod,w
  1190  07C2  3E30               	addlw	48
  1191  07C3  00FC               	movwf	??_display
  1192  07C4  1283               	bcf	3,5	;RP0=0, select bank0
  1193  07C5  1303               	bcf	3,6	;RP1=0, select bank0
  1194  07C6  0825               	movf	display@i,w
  1195  07C7  3E20               	addlw	(low (display@buff| 0))& (0+255)
  1196  07C8  0084               	movwf	4
  1197  07C9  087C               	movf	??_display,w
  1198  07CA  1383               	bcf	3,7	;select IRP bank0
  1199  07CB  0080               	movwf	0
  1200  07CC                     l971:	
  1201                           
  1202                           ;main.c: 36: }
  1203  07CC  300A               	movlw	10
  1204  07CD  00F0               	movwf	___lwdiv@divisor
  1205  07CE  3000               	movlw	0
  1206  07CF  00F1               	movwf	___lwdiv@divisor+1
  1207  07D0  087B               	movf	display@adc_reg_val_2+1,w
  1208  07D1  00F3               	movwf	___lwdiv@dividend+1
  1209  07D2  087A               	movf	display@adc_reg_val_2,w
  1210  07D3  00F2               	movwf	___lwdiv@dividend
  1211  07D4  120A  118A  26A0  120A  118A  	fcall	___lwdiv
  1212  07D9  0871               	movf	?___lwdiv+1,w
  1213  07DA  00FB               	movwf	display@adc_reg_val_2+1
  1214  07DB  0870               	movf	?___lwdiv,w
  1215  07DC  00FA               	movwf	display@adc_reg_val_2
  1216  07DD                     l973:	
  1217                           
  1218                           ;main.c: 37: 
  1219  07DD  30FF               	movlw	255
  1220  07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1221  07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1222  07E0  07A5               	addwf	display@i,f
  1223  07E1  1803               	skipnc
  1224  07E2  0AA6               	incf	display@i+1,f
  1225  07E3  30FF               	movlw	255
  1226  07E4  07A6               	addwf	display@i+1,f
  1227  07E5  0A25               	incf	display@i,w
  1228  07E6  1D03               	skipz
  1229  07E7  2FEC               	goto	u421
  1230  07E8  0A26               	incf	display@i+1,w
  1231  07E9  1D03               	btfss	3,2
  1232  07EA  2FEC               	goto	u421
  1233  07EB  2FED               	goto	u420
  1234  07EC                     u421:	
  1235  07EC  2FB4               	goto	l969
  1236  07ED                     u420:	
  1237  07ED                     l975:	
  1238                           
  1239                           ;main.c: 38: void main(void) {
  1240  07ED  01A4               	clrf	display@buff+4
  1241  07EE                     l977:	
  1242                           
  1243                           ;main.c: 40: 
  1244  07EE  3020               	movlw	(low (display@buff| 0))& (0+255)
  1245  07EF  00F4               	movwf	clcd_print@str
  1246  07F0  3000               	movlw	0
  1247  07F1  00F5               	movwf	clcd_print@str+1
  1248  07F2  30CC               	movlw	204
  1249  07F3  00FC               	movwf	??_display
  1250  07F4  087C               	movf	??_display,w
  1251  07F5  00F6               	movwf	clcd_print@addr
  1252  07F6  120A  118A  2601  120A  118A  	fcall	_clcd_print
  1253  07FB                     l38:	
  1254  07FB  0008               	return
  1255  07FC                     __end_of_display:	
  1256                           
  1257                           	psect	text7
  1258  0601                     __ptext7:	
  1259 ;; *************** function _clcd_print *****************
  1260 ;; Defined at:
  1261 ;;		line 62 in file "clcd.c"
  1262 ;; Parameters:    Size  Location     Type
  1263 ;;  str             2    4[COMMON] PTR const unsigned char 
  1264 ;;		 -> STR_3(9), STR_2(4), display@buff(5), STR_1(4), 
  1265 ;;  addr            1    6[COMMON] unsigned char 
  1266 ;; Auto vars:     Size  Location     Type
  1267 ;;		None
  1268 ;; Return value:  Size  Location     Type
  1269 ;;                  1    wreg      void 
  1270 ;; Registers used:
  1271 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1272 ;; Tracked objects:
  1273 ;;		On entry : 0/0
  1274 ;;		On exit  : 0/0
  1275 ;;		Unchanged: 0/0
  1276 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1277 ;;      Params:         3       0       0       0       0
  1278 ;;      Locals:         0       0       0       0       0
  1279 ;;      Temps:          0       0       0       0       0
  1280 ;;      Totals:         3       0       0       0       0
  1281 ;;Total ram usage:        3 bytes
  1282 ;; Hardware stack levels used:    1
  1283 ;; Hardware stack levels required when called:    1
  1284 ;; This function calls:
  1285 ;;		_clcd_write
  1286 ;; This function is called by:
  1287 ;;		_display
  1288 ;;		_init_config
  1289 ;; This function uses a non-reentrant model
  1290 ;;
  1291                           
  1292                           
  1293                           ;psect for function _clcd_print
  1294  0601                     _clcd_print:	
  1295  0601                     l879:	
  1296                           ;incstack = 0
  1297                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1298                           
  1299                           
  1300                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
  1301  0601  01F0               	clrf	clcd_write@mode
  1302  0602  0876               	movf	clcd_print@addr,w
  1303  0603  120A  118A  2630  120A  118A  	fcall	_clcd_write
  1304                           
  1305                           ;clcd.c: 66:     while (*str != '\0')
  1306  0608  2E1F               	goto	l885
  1307  0609                     l881:	
  1308                           
  1309                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
  1310  0609  01F0               	clrf	clcd_write@mode
  1311  060A  0AF0               	incf	clcd_write@mode,f
  1312  060B  0875               	movf	clcd_print@str+1,w
  1313  060C  00FF               	movwf	btemp+1
  1314  060D  0874               	movf	clcd_print@str,w
  1315  060E  0084               	movwf	4
  1316  060F  120A  118A  2003  120A  118A  	fcall	stringtab
  1317  0614  120A  118A  2630  120A  118A  	fcall	_clcd_write
  1318  0619                     l883:	
  1319                           
  1320                           ;clcd.c: 69:         str++;
  1321  0619  3001               	movlw	1
  1322  061A  07F4               	addwf	clcd_print@str,f
  1323  061B  1803               	skipnc
  1324  061C  0AF5               	incf	clcd_print@str+1,f
  1325  061D  3000               	movlw	0
  1326  061E  07F5               	addwf	clcd_print@str+1,f
  1327  061F                     l885:	
  1328                           
  1329                           ;clcd.c: 66:     while (*str != '\0')
  1330  061F  0875               	movf	clcd_print@str+1,w
  1331  0620  1283               	bcf	3,5	;RP0=0, select bank0
  1332  0621  1303               	bcf	3,6	;RP1=0, select bank0
  1333  0622  00FF               	movwf	btemp+1
  1334  0623  0874               	movf	clcd_print@str,w
  1335  0624  0084               	movwf	4
  1336  0625  120A  118A  2003  120A  118A  	fcall	stringtab
  1337  062A  3A00               	xorlw	0
  1338  062B  1D03               	skipz
  1339  062C  2E2E               	goto	u251
  1340  062D  2E2F               	goto	u250
  1341  062E                     u251:	
  1342  062E  2E09               	goto	l881
  1343  062F                     u250:	
  1344  062F                     l81:	
  1345  062F  0008               	return
  1346  0630                     __end_of_clcd_print:	
  1347                           
  1348                           	psect	text8
  1349  0630                     __ptext8:	
  1350 ;; *************** function _clcd_write *****************
  1351 ;; Defined at:
  1352 ;;		line 4 in file "clcd.c"
  1353 ;; Parameters:    Size  Location     Type
  1354 ;;  byte            1    wreg     unsigned char 
  1355 ;;  mode            1    0[COMMON] unsigned char 
  1356 ;; Auto vars:     Size  Location     Type
  1357 ;;  byte            1    3[COMMON] unsigned char 
  1358 ;; Return value:  Size  Location     Type
  1359 ;;                  1    wreg      void 
  1360 ;; Registers used:
  1361 ;;		wreg, status,2, status,0
  1362 ;; Tracked objects:
  1363 ;;		On entry : 0/0
  1364 ;;		On exit  : 0/0
  1365 ;;		Unchanged: 0/0
  1366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1367 ;;      Params:         1       0       0       0       0
  1368 ;;      Locals:         1       0       0       0       0
  1369 ;;      Temps:          2       0       0       0       0
  1370 ;;      Totals:         4       0       0       0       0
  1371 ;;Total ram usage:        4 bytes
  1372 ;; Hardware stack levels used:    1
  1373 ;; This function calls:
  1374 ;;		Nothing
  1375 ;; This function is called by:
  1376 ;;		_init_display_controller
  1377 ;;		_clcd_print
  1378 ;;		_clcd_putch
  1379 ;; This function uses a non-reentrant model
  1380 ;;
  1381                           
  1382                           
  1383                           ;psect for function _clcd_write
  1384  0630                     _clcd_write:	
  1385                           
  1386                           ;incstack = 0
  1387                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  1388                           ;clcd_write@byte stored from wreg
  1389  0630  00F3               	movwf	clcd_write@byte
  1390  0631                     l833:	
  1391                           
  1392                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
  1393  0631  1870               	btfsc	clcd_write@mode,0
  1394  0632  2E34               	goto	u221
  1395  0633  2E38               	goto	u220
  1396  0634                     u221:	
  1397  0634  1283               	bcf	3,5	;RP0=0, select bank0
  1398  0635  1303               	bcf	3,6	;RP1=0, select bank0
  1399  0636  1509               	bsf	9,2	;volatile
  1400  0637  2E3B               	goto	u234
  1401  0638                     u220:	
  1402  0638  1283               	bcf	3,5	;RP0=0, select bank0
  1403  0639  1303               	bcf	3,6	;RP1=0, select bank0
  1404  063A  1109               	bcf	9,2	;volatile
  1405  063B                     u234:	
  1406  063B                     l835:	
  1407                           
  1408                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  1409  063B  0873               	movf	clcd_write@byte,w
  1410  063C  39F0               	andlw	240
  1411  063D  0088               	movwf	8	;volatile
  1412  063E                     l837:	
  1413                           
  1414                           ;clcd.c: 9:     RE1 = 1;
  1415  063E  1489               	bsf	9,1	;volatile
  1416  063F                     l839:	
  1417                           
  1418                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1419  063F  30A6               	movlw	166
  1420  0640  00F1               	movwf	??_clcd_write
  1421  0641                     u507:	
  1422  0641  0BF1               	decfsz	??_clcd_write,f
  1423  0642  2E41               	goto	u507
  1424  0643  0000               	nop
  1425  0644                     l841:	
  1426                           
  1427                           ;clcd.c: 11:     RE1 = 0;
  1428  0644  1283               	bcf	3,5	;RP0=0, select bank0
  1429  0645  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0646  1089               	bcf	9,1	;volatile
  1431  0647                     l843:	
  1432                           
  1433                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  1434  0647  0873               	movf	clcd_write@byte,w
  1435  0648  390F               	andlw	15
  1436  0649  00F1               	movwf	??_clcd_write
  1437  064A  3003               	movlw	3
  1438  064B                     u245:	
  1439  064B  1003               	clrc
  1440  064C  0DF1               	rlf	??_clcd_write,f
  1441  064D  3EFF               	addlw	-1
  1442  064E  1D03               	skipz
  1443  064F  2E4B               	goto	u245
  1444  0650  1003               	clrc
  1445  0651  0D71               	rlf	??_clcd_write,w
  1446  0652  0088               	movwf	8	;volatile
  1447  0653                     l845:	
  1448                           
  1449                           ;clcd.c: 14:     RE1 = 1;
  1450  0653  1489               	bsf	9,1	;volatile
  1451  0654                     l847:	
  1452                           
  1453                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1454  0654  30A6               	movlw	166
  1455  0655  00F1               	movwf	??_clcd_write
  1456  0656                     u517:	
  1457  0656  0BF1               	decfsz	??_clcd_write,f
  1458  0657  2E56               	goto	u517
  1459  0658  0000               	nop
  1460  0659                     l849:	
  1461                           
  1462                           ;clcd.c: 16:     RE1 = 0;
  1463  0659  1283               	bcf	3,5	;RP0=0, select bank0
  1464  065A  1303               	bcf	3,6	;RP1=0, select bank0
  1465  065B  1089               	bcf	9,1	;volatile
  1466  065C                     l851:	
  1467                           
  1468                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1469  065C  301B               	movlw	27
  1470  065D  00F2               	movwf	??_clcd_write+1
  1471  065E  309E               	movlw	158
  1472  065F  00F1               	movwf	??_clcd_write
  1473  0660                     u527:	
  1474  0660  0BF1               	decfsz	??_clcd_write,f
  1475  0661  2E60               	goto	u527
  1476  0662  0BF2               	decfsz	??_clcd_write+1,f
  1477  0663  2E60               	goto	u527
  1478  0664  0000               	nop
  1479  0665                     l66:	
  1480  0665  0008               	return
  1481  0666                     __end_of_clcd_write:	
  1482                           
  1483                           	psect	text9
  1484  0666                     __ptext9:	
  1485 ;; *************** function ___lwmod *****************
  1486 ;; Defined at:
  1487 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwmod.c"
  1488 ;; Parameters:    Size  Location     Type
  1489 ;;  divisor         2    0[COMMON] unsigned int 
  1490 ;;  dividend        2    2[COMMON] unsigned int 
  1491 ;; Auto vars:     Size  Location     Type
  1492 ;;  counter         1    5[COMMON] unsigned char 
  1493 ;; Return value:  Size  Location     Type
  1494 ;;                  2    0[COMMON] unsigned int 
  1495 ;; Registers used:
  1496 ;;		wreg, status,2, status,0
  1497 ;; Tracked objects:
  1498 ;;		On entry : 0/0
  1499 ;;		On exit  : 0/0
  1500 ;;		Unchanged: 0/0
  1501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1502 ;;      Params:         4       0       0       0       0
  1503 ;;      Locals:         1       0       0       0       0
  1504 ;;      Temps:          1       0       0       0       0
  1505 ;;      Totals:         6       0       0       0       0
  1506 ;;Total ram usage:        6 bytes
  1507 ;; Hardware stack levels used:    1
  1508 ;; This function calls:
  1509 ;;		Nothing
  1510 ;; This function is called by:
  1511 ;;		_display
  1512 ;; This function uses a non-reentrant model
  1513 ;;
  1514                           
  1515                           
  1516                           ;psect for function ___lwmod
  1517  0666                     ___lwmod:	
  1518  0666                     l921:	
  1519                           ;incstack = 0
  1520                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1521                           
  1522  0666  0870               	movf	___lwmod@divisor,w
  1523  0667  0471               	iorwf	___lwmod@divisor+1,w
  1524  0668  1903               	btfsc	3,2
  1525  0669  2E6B               	goto	u331
  1526  066A  2E6C               	goto	u330
  1527  066B                     u331:	
  1528  066B  2E9B               	goto	l939
  1529  066C                     u330:	
  1530  066C                     l923:	
  1531  066C  01F5               	clrf	___lwmod@counter
  1532  066D  0AF5               	incf	___lwmod@counter,f
  1533  066E  2E7A               	goto	l929
  1534  066F                     l925:	
  1535  066F  3001               	movlw	1
  1536  0670                     u345:	
  1537  0670  1003               	clrc
  1538  0671  0DF0               	rlf	___lwmod@divisor,f
  1539  0672  0DF1               	rlf	___lwmod@divisor+1,f
  1540  0673  3EFF               	addlw	-1
  1541  0674  1D03               	skipz
  1542  0675  2E70               	goto	u345
  1543  0676                     l927:	
  1544  0676  3001               	movlw	1
  1545  0677  00F4               	movwf	??___lwmod
  1546  0678  0874               	movf	??___lwmod,w
  1547  0679  07F5               	addwf	___lwmod@counter,f
  1548  067A                     l929:	
  1549  067A  1FF1               	btfss	___lwmod@divisor+1,7
  1550  067B  2E7D               	goto	u351
  1551  067C  2E7E               	goto	u350
  1552  067D                     u351:	
  1553  067D  2E6F               	goto	l925
  1554  067E                     u350:	
  1555  067E                     l931:	
  1556  067E  0871               	movf	___lwmod@divisor+1,w
  1557  067F  0273               	subwf	___lwmod@dividend+1,w
  1558  0680  1D03               	skipz
  1559  0681  2E84               	goto	u365
  1560  0682  0870               	movf	___lwmod@divisor,w
  1561  0683  0272               	subwf	___lwmod@dividend,w
  1562  0684                     u365:	
  1563  0684  1C03               	skipc
  1564  0685  2E87               	goto	u361
  1565  0686  2E88               	goto	u360
  1566  0687                     u361:	
  1567  0687  2E8E               	goto	l935
  1568  0688                     u360:	
  1569  0688                     l933:	
  1570  0688  0870               	movf	___lwmod@divisor,w
  1571  0689  02F2               	subwf	___lwmod@dividend,f
  1572  068A  0871               	movf	___lwmod@divisor+1,w
  1573  068B  1C03               	skipc
  1574  068C  03F3               	decf	___lwmod@dividend+1,f
  1575  068D  02F3               	subwf	___lwmod@dividend+1,f
  1576  068E                     l935:	
  1577  068E  3001               	movlw	1
  1578  068F                     u375:	
  1579  068F  1003               	clrc
  1580  0690  0CF1               	rrf	___lwmod@divisor+1,f
  1581  0691  0CF0               	rrf	___lwmod@divisor,f
  1582  0692  3EFF               	addlw	-1
  1583  0693  1D03               	skipz
  1584  0694  2E8F               	goto	u375
  1585  0695                     l937:	
  1586  0695  3001               	movlw	1
  1587  0696  02F5               	subwf	___lwmod@counter,f
  1588  0697  1D03               	btfss	3,2
  1589  0698  2E9A               	goto	u381
  1590  0699  2E9B               	goto	u380
  1591  069A                     u381:	
  1592  069A  2E7E               	goto	l931
  1593  069B                     u380:	
  1594  069B                     l939:	
  1595  069B  0873               	movf	___lwmod@dividend+1,w
  1596  069C  00F1               	movwf	?___lwmod+1
  1597  069D  0872               	movf	___lwmod@dividend,w
  1598  069E  00F0               	movwf	?___lwmod
  1599  069F                     l449:	
  1600  069F  0008               	return
  1601  06A0                     __end_of___lwmod:	
  1602                           
  1603                           	psect	text10
  1604  06A0                     __ptext10:	
  1605 ;; *************** function ___lwdiv *****************
  1606 ;; Defined at:
  1607 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.10\pic\sources\c90\common\lwdiv.c"
  1608 ;; Parameters:    Size  Location     Type
  1609 ;;  divisor         2    0[COMMON] unsigned int 
  1610 ;;  dividend        2    2[COMMON] unsigned int 
  1611 ;; Auto vars:     Size  Location     Type
  1612 ;;  quotient        2    5[COMMON] unsigned int 
  1613 ;;  counter         1    7[COMMON] unsigned char 
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  2    0[COMMON] unsigned int 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         4       0       0       0       0
  1624 ;;      Locals:         3       0       0       0       0
  1625 ;;      Temps:          1       0       0       0       0
  1626 ;;      Totals:         8       0       0       0       0
  1627 ;;Total ram usage:        8 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; This function calls:
  1630 ;;		Nothing
  1631 ;; This function is called by:
  1632 ;;		_display
  1633 ;; This function uses a non-reentrant model
  1634 ;;
  1635                           
  1636                           
  1637                           ;psect for function ___lwdiv
  1638  06A0                     ___lwdiv:	
  1639  06A0                     l895:	
  1640                           ;incstack = 0
  1641                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1642                           
  1643  06A0  01F5               	clrf	___lwdiv@quotient
  1644  06A1  01F6               	clrf	___lwdiv@quotient+1
  1645  06A2                     l897:	
  1646  06A2  0870               	movf	___lwdiv@divisor,w
  1647  06A3  0471               	iorwf	___lwdiv@divisor+1,w
  1648  06A4  1903               	btfsc	3,2
  1649  06A5  2EA7               	goto	u261
  1650  06A6  2EA8               	goto	u260
  1651  06A7                     u261:	
  1652  06A7  2EDF               	goto	l917
  1653  06A8                     u260:	
  1654  06A8                     l899:	
  1655  06A8  01F7               	clrf	___lwdiv@counter
  1656  06A9  0AF7               	incf	___lwdiv@counter,f
  1657  06AA  2EB6               	goto	l905
  1658  06AB                     l901:	
  1659  06AB  3001               	movlw	1
  1660  06AC                     u275:	
  1661  06AC  1003               	clrc
  1662  06AD  0DF0               	rlf	___lwdiv@divisor,f
  1663  06AE  0DF1               	rlf	___lwdiv@divisor+1,f
  1664  06AF  3EFF               	addlw	-1
  1665  06B0  1D03               	skipz
  1666  06B1  2EAC               	goto	u275
  1667  06B2                     l903:	
  1668  06B2  3001               	movlw	1
  1669  06B3  00F4               	movwf	??___lwdiv
  1670  06B4  0874               	movf	??___lwdiv,w
  1671  06B5  07F7               	addwf	___lwdiv@counter,f
  1672  06B6                     l905:	
  1673  06B6  1FF1               	btfss	___lwdiv@divisor+1,7
  1674  06B7  2EB9               	goto	u281
  1675  06B8  2EBA               	goto	u280
  1676  06B9                     u281:	
  1677  06B9  2EAB               	goto	l901
  1678  06BA                     u280:	
  1679  06BA                     l907:	
  1680  06BA  3001               	movlw	1
  1681  06BB                     u295:	
  1682  06BB  1003               	clrc
  1683  06BC  0DF5               	rlf	___lwdiv@quotient,f
  1684  06BD  0DF6               	rlf	___lwdiv@quotient+1,f
  1685  06BE  3EFF               	addlw	-1
  1686  06BF  1D03               	skipz
  1687  06C0  2EBB               	goto	u295
  1688  06C1  0871               	movf	___lwdiv@divisor+1,w
  1689  06C2  0273               	subwf	___lwdiv@dividend+1,w
  1690  06C3  1D03               	skipz
  1691  06C4  2EC7               	goto	u305
  1692  06C5  0870               	movf	___lwdiv@divisor,w
  1693  06C6  0272               	subwf	___lwdiv@dividend,w
  1694  06C7                     u305:	
  1695  06C7  1C03               	skipc
  1696  06C8  2ECA               	goto	u301
  1697  06C9  2ECB               	goto	u300
  1698  06CA                     u301:	
  1699  06CA  2ED2               	goto	l913
  1700  06CB                     u300:	
  1701  06CB                     l909:	
  1702  06CB  0870               	movf	___lwdiv@divisor,w
  1703  06CC  02F2               	subwf	___lwdiv@dividend,f
  1704  06CD  0871               	movf	___lwdiv@divisor+1,w
  1705  06CE  1C03               	skipc
  1706  06CF  03F3               	decf	___lwdiv@dividend+1,f
  1707  06D0  02F3               	subwf	___lwdiv@dividend+1,f
  1708  06D1                     l911:	
  1709  06D1  1475               	bsf	___lwdiv@quotient,0
  1710  06D2                     l913:	
  1711  06D2  3001               	movlw	1
  1712  06D3                     u315:	
  1713  06D3  1003               	clrc
  1714  06D4  0CF1               	rrf	___lwdiv@divisor+1,f
  1715  06D5  0CF0               	rrf	___lwdiv@divisor,f
  1716  06D6  3EFF               	addlw	-1
  1717  06D7  1D03               	skipz
  1718  06D8  2ED3               	goto	u315
  1719  06D9                     l915:	
  1720  06D9  3001               	movlw	1
  1721  06DA  02F7               	subwf	___lwdiv@counter,f
  1722  06DB  1D03               	btfss	3,2
  1723  06DC  2EDE               	goto	u321
  1724  06DD  2EDF               	goto	u320
  1725  06DE                     u321:	
  1726  06DE  2EBA               	goto	l907
  1727  06DF                     u320:	
  1728  06DF                     l917:	
  1729  06DF  0876               	movf	___lwdiv@quotient+1,w
  1730  06E0  00F1               	movwf	?___lwdiv+1
  1731  06E1  0875               	movf	___lwdiv@quotient,w
  1732  06E2  00F0               	movwf	?___lwdiv
  1733  06E3                     l439:	
  1734  06E3  0008               	return
  1735  06E4                     __end_of___lwdiv:	
  1736  007E                     btemp	set	126	;btemp
  1737  007E                     wtemp0	set	126


Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     13      13
    BANK0            80     11      11
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_3(CODE[9]), STR_2(CODE[4]), display@buff(BANK0[5]), STR_1(CODE[4]), 


Critical Paths under _main in COMMON

    _main->_display
    _init_config->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _display->___lwdiv
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    _main->_display

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    5854
                                              7 BANK0      4     4      0
                            _display
                        _init_config
                           _read_adc
 ---------------------------------------------------------------------------------
 (1) _read_adc                                             6     4      2      45
                                              0 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _init_config                                          1     1      0    2631
                                              7 COMMON     1     1      0
                         _clcd_print
                           _init_adc
                          _init_clcd
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _init_adc                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _display                                             12     8      4    3132
                                              8 COMMON     5     1      4
                                              0 BANK0      7     7      0
                            ___lwdiv
                            ___lwmod
                         _clcd_print
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    1729
                                              4 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     463
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     466
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _display
     ___lwdiv
     ___lwmod
     _clcd_print
       _clcd_write
   _init_config
     _clcd_print
       _clcd_write
     _init_adc
     _init_clcd
       _init_display_controller
         _clcd_write
   _read_adc

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      D       D       1       92.9%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      B       B       5       13.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Wed Sep 22 12:00:27 2021

                               pc 0002                    clcd_print@addr 0076  __size_of_init_display_controller 0063  
                              l20 05C4                                l23 05D2                                l17 0590  
                              l41 05B3                                l38 07FB                                l72 059B  
                              l81 062F                                l66 0665                                l69 0746  
                              _GO 00FA                                fsr 0004                               l439 06E3  
                             l449 069F                               l901 06AB                               l911 06D1  
                             l903 06B2                               l913 06D2                               l905 06B6  
                             l921 0666                               l841 0644                               l833 0631  
                             l915 06D9                               l907 06BA                               l931 067E  
                             l923 066C                               l851 065C                               l843 0647  
                             l835 063B                               l909 06CB                               l917 06DF  
                             l933 0688                               l925 066F                               l845 0653  
                             l837 063E                               l861 0708                               l853 06E4  
                             l935 068E                               l927 0676                               l847 0654  
                             l839 063F                               l951 0747                               l871 072A  
                             l863 070F                               l855 06EC                               l943 05B5  
                             l937 0695                               l929 067A                               l849 0659  
                             l881 0609                               l961 0793                               l953 0754  
                             l873 073A                               l865 0712                               l857 06F3  
                             l945 05C3                               l939 069B                               l883 0619  
                             l971 07CC                               l963 0794                               l955 075A  
                             l875 0741                               l867 0719                               l859 0703  
                             l891 0595                               l947 05C8                               l885 061F  
                             l973 07DD                               l965 07A1                               l957 0772  
                             l877 058A                               l869 0725                               l893 0596  
                             l981 05A1                               l895 06A0                               l879 0601  
                             l975 07ED                               l967 07AE                               l959 0783  
                             l887 0591                               l983 05A6                               l897 06A2  
                             l977 07EE                               l969 07B4                               l889 0594  
                             l985 05D3                               l899 06A8                               l979 059C  
                             l987 05D8                               l989 05E4                               _RE1 0049  
                             _RE2 004A                               u300 06CB                               u220 0638  
                             u301 06CA                               u221 0634                               u320 06DF  
                             u400 05C8                               u321 06DE                               u305 06C7  
                             u401 05C7                               u330 066C                               u234 063B  
                             u250 062F                               u410 0793                               u315 06D3  
                             u331 066B                               u251 062E                               u411 0792  
                             u260 06A8                               u420 07ED                               u261 06A7  
                             u245 064B                               u421 07EC                               u350 067E  
                             u351 067D                               u280 06BA                               u360 0688  
                             u281 06B9                               u361 0687                               u345 0670  
                             u275 06AC                               u507 0641                               u380 069B  
                             u381 069A                               u365 0684                               u517 0656  
                             u437 06E8                               u295 06BB                               u375 068F  
                             u527 0660                               u447 06F7                               u457 0705  
                             u467 071B                               u395 05B8                               u477 0727  
                             u487 0735                               u497 0743                               fsr0 0004  
                             indf 0000                              _ADFM 04FF                              _ADON 00F8  
                            STR_1 001C                              STR_2 0020                              STR_3 0013  
                     display@buff 0020                              _main 05D3                              btemp 007E  
                            start 0000                    clcd_write@byte 0073                    clcd_write@mode 0070  
                           ?_main 0070                     __CFG_WDTE$OFF 0000                   __end_of___lwdiv 06E4  
                 __end_of___lwmod 06A0                      ?_init_config 0070                             _PORTD 0008  
                           _TRISD 0088                             _nDONE 00FA                   __end_of_display 07FC  
                           pclath 000A                             status 0003                             wtemp0 007E  
                 __initialization 07FC                      __end_of_main 0601                            ??_main 007D  
                          _ADCON0 001F                            _ADRESH 001E                            _ADRESL 009E  
                          _TRISE1 0449                            _TRISE2 044A           _init_display_controller 06E4  
                       ??___lwdiv 0074                         ??___lwmod 0074                  __end_of_init_adc 0591  
                __end_of_read_adc 05D3                         ??_display 007C           __end_of__initialization 07FC  
                  __pcstackCOMMON 0070              __size_of_init_config 0018                __size_of_init_clcd 000B  
       ??_init_display_controller 0074                        _clcd_print 0601                        _clcd_write 0630  
                      __pmaintext 05D3                        __stringtab 0003                         ?_init_adc 0070  
                       ?_read_adc 0070                           ___lwdiv 06A0                           ___lwmod 0666  
                         __ptext1 05B4                           __ptext2 059C                           __ptext3 0591  
                         __ptext4 06E4                           __ptext5 058A                           __ptext6 0747  
                         __ptext7 0601                           __ptext8 0630                           __ptext9 0666  
                         _display 0747   __end_of_init_display_controller 0747                 __end_of_init_clcd 059C  
            end_of_initialization 07FC                        ??_init_adc 0070                        ??_read_adc 0072  
                     ?_clcd_print 0074                       ?_clcd_write 0070                   read_adc@channel 0075  
                   clcd_print@str 0074               start_initialization 07FC               __size_of_clcd_print 002F  
             __size_of_clcd_write 0036                     ??_init_config 0077                         ___latbits 0002  
                   __pcstackBANK0 0020                 __size_of_init_adc 0007                 __size_of_read_adc 001F  
                ___lwdiv@dividend 0072                          ?___lwdiv 0070                          ?___lwmod 0070  
                       __pstrings 0003                          ?_display 0078               read_adc@adc_reg_val 0073  
                ___lwdiv@quotient 0075                         _init_clcd 0591               __end_of_init_config 05B4  
        ?_init_display_controller 0070                      ??_clcd_print 0077                      ??_clcd_write 0071  
                     __stringbase 0012              display@adc_reg_val_1 0078              display@adc_reg_val_2 007A  
              __end_of_clcd_print 0630                __end_of_clcd_write 0666                        ?_init_clcd 0070  
                __size_of___lwdiv 0044                  __size_of___lwmod 003A                __end_of__stringtab 0013  
                     _init_config 059C                  __size_of_display 00B5                   ___lwdiv@divisor 0070  
                 ___lwdiv@counter 0077                          __ptext10 06A0                          _init_adc 058A  
                        _read_adc 05B4                     __size_of_main 002E                          display@i 0025  
                     ??_init_clcd 0076                  ___lwmod@dividend 0072                         stringcode 000D  
               main@adc_reg_val_1 0027                 main@adc_reg_val_2 0029                   ___lwmod@divisor 0070  
                 ___lwmod@counter 0075                          stringdir 000D                          stringtab 0003  
