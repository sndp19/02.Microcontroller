

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Mon Aug 29 03:22:48 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     6                           	psect	strings,global,class=STRING,delta=2,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2
    17                           	psect	text4,local,class=CODE,merge=1,delta=2
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	text6,local,class=CODE,merge=1,delta=2
    20                           	psect	text7,local,class=CODE,merge=1,delta=2
    21                           	psect	text8,local,class=CODE,merge=1,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.20
    26                           ; Generated 12/02/2020 GMT
    27                           ; 
    28                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299                           
   300                           	psect	idataCOMMON
   301  0543                     __pidataCOMMON:
   302                           
   303                           ;initializer for read_matrix_keypad@once
   304  0543  3401               	retlw	1
   305                           
   306                           	psect	idataBANK0
   307  055F                     __pidataBANK0:
   308                           
   309                           ;initializer for main@F864
   310  055F  3420               	retlw	32
   311  0560  3447               	retlw	71
   312  0561  345F               	retlw	95
   313  0562  3453               	retlw	83
   314  0563  3461               	retlw	97
   315  0564  346E               	retlw	110
   316  0565  3464               	retlw	100
   317  0566  3465               	retlw	101
   318  0567  3465               	retlw	101
   319  0568  3470               	retlw	112
   320  0569  345F               	retlw	95
   321  056A  3456               	retlw	86
   322  056B  3461               	retlw	97
   323  056C  3472               	retlw	114
   324  056D  346D               	retlw	109
   325  056E  3461               	retlw	97
   326  0008                     _PORTD	set	8
   327  0032                     _RB2	set	50
   328  0031                     _RB1	set	49
   329  0030                     _RB0	set	48
   330  0040                     _RD0	set	64
   331  0041                     _RD1	set	65
   332  0042                     _RD2	set	66
   333  0043                     _RD3	set	67
   334  0049                     _RE1	set	73
   335  004A                     _RE2	set	74
   336  0086                     _TRISB	set	134
   337  0088                     _TRISD	set	136
   338  040F                     _nRBPU	set	1039
   339  0449                     _TRISE1	set	1097
   340  044A                     _TRISE2	set	1098
   341                           
   342                           	psect	strings
   343  0003                     __pstrings:
   344  0003                     stringtab:
   345  0003                     __stringtab:
   346                           
   347                           ;	String table - string pointers are 1 byte each
   348  0003  1BFF               	btfsc	btemp+1,7
   349  0004  280D               	ljmp	stringcode
   350  0005  1383               	bcf	3,7
   351  0006  187F               	btfsc	btemp+1,0
   352  0007  1783               	bsf	3,7
   353  0008  0800               	movf	0,w
   354  0009  0A84               	incf	4,f
   355  000A  1903               	skipnz
   356  000B  0AFF               	incf	btemp+1,f
   357  000C  0008               	return
   358  000D                     stringcode:
   359  000D                     stringdir:
   360  000D  3000               	movlw	high stringdir
   361  000E  008A               	movwf	10
   362  000F  0804               	movf	4,w
   363  0010  0A84               	incf	4,f
   364  0011  0782               	addwf	2,f
   365  0012                     __stringbase:
   366  0012  3400               	retlw	0
   367  0013                     __end_of__stringtab:
   368  0013                     STR_2:
   369  0013  3453               	retlw	83	;'S'
   370  0014  3431               	retlw	49	;'1'
   371  0015  342D               	retlw	45	;'-'
   372  0016  3452               	retlw	82	;'R'
   373  0017  3469               	retlw	105	;'i'
   374  0018  3467               	retlw	103	;'g'
   375  0019  3468               	retlw	104	;'h'
   376  001A  3474               	retlw	116	;'t'
   377  001B  3420               	retlw	32	;' '
   378  001C  3453               	retlw	83	;'S'
   379  001D  3432               	retlw	50	;'2'
   380  001E  342D               	retlw	45	;'-'
   381  001F  344C               	retlw	76	;'L'
   382  0020  3465               	retlw	101	;'e'
   383  0021  3466               	retlw	102	;'f'
   384  0022  3474               	retlw	116	;'t'
   385  0023  3400               	retlw	0
   386  0024                     STR_1:
   387  0024  3453               	retlw	83	;'S'
   388  0025  3465               	retlw	101	;'e'
   389  0026  346C               	retlw	108	;'l'
   390  0027  3465               	retlw	101	;'e'
   391  0028  3463               	retlw	99	;'c'
   392  0029  3474               	retlw	116	;'t'
   393  002A  3420               	retlw	32	;' '
   394  002B  344D               	retlw	77	;'M'
   395  002C  344B               	retlw	75	;'K'
   396  002D  3450               	retlw	80	;'P'
   397  002E  3420               	retlw	32	;' '
   398  002F  344B               	retlw	75	;'K'
   399  0030  3465               	retlw	101	;'e'
   400  0031  3479               	retlw	121	;'y'
   401  0032  343A               	retlw	58	;':'
   402  0033  3400               	retlw	0
   403  0034                     STR_3:
   404  0034  3452               	retlw	82	;'R'
   405  0035  3469               	retlw	105	;'i'
   406  0036  3467               	retlw	103	;'g'
   407  0037  3468               	retlw	104	;'h'
   408  0038  3474               	retlw	116	;'t'
   409  0039  3420               	retlw	32	;' '
   410  003A  3453               	retlw	83	;'S'
   411  003B  3463               	retlw	99	;'c'
   412  003C  3472               	retlw	114	;'r'
   413  003D  346F               	retlw	111	;'o'
   414  003E  346C               	retlw	108	;'l'
   415  003F  346C               	retlw	108	;'l'
   416  0040  3469               	retlw	105	;'i'
   417  0041  346E               	retlw	110	;'n'
   418  0042  3467               	retlw	103	;'g'
   419  0043  3400               	retlw	0
   420  0044                     STR_4:
   421  0044  344C               	retlw	76	;'L'
   422  0045  3465               	retlw	101	;'e'
   423  0046  3466               	retlw	102	;'f'
   424  0047  3474               	retlw	116	;'t'
   425  0048  3420               	retlw	32	;' '
   426  0049  3453               	retlw	83	;'S'
   427  004A  3463               	retlw	99	;'c'
   428  004B  3472               	retlw	114	;'r'
   429  004C  346F               	retlw	111	;'o'
   430  004D  346C               	retlw	108	;'l'
   431  004E  346C               	retlw	108	;'l'
   432  004F  3469               	retlw	105	;'i'
   433  0050  346E               	retlw	110	;'n'
   434  0051  3467               	retlw	103	;'g'
   435  0052  3400               	retlw	0
   436                           
   437                           	psect	cinit
   438  07E8                     start_initialization:	
   439                           ; #config settings
   440                           
   441  07E8                     __initialization:
   442                           
   443                           ; Initialize objects allocated to BANK0
   444  07E8  1383               	bcf	3,7	;select IRP bank0
   445  07E9  3044               	movlw	low (__pdataBANK0+16)
   446  07EA  00FD               	movwf	btemp+-1
   447  07EB  3005               	movlw	high __pidataBANK0
   448  07EC  00FE               	movwf	btemp
   449  07ED  305F               	movlw	low __pidataBANK0
   450  07EE  00FF               	movwf	btemp+1
   451  07EF  3034               	movlw	low __pdataBANK0
   452  07F0  0084               	movwf	4
   453  07F1  120A  118A  2573  120A  118A  	fcall	init_ram0
   454                           
   455                           ; Initialize objects allocated to COMMON
   456  07F6  120A  118A  2543  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   457  07FB  00FC               	movwf	__pdataCOMMON& (0+127)
   458  07FC                     end_of_initialization:	
   459                           ;End of C runtime variable initialization code
   460                           
   461  07FC                     __end_of__initialization:
   462  07FC  0183               	clrf	3
   463  07FD  120A  118A  2E94   	ljmp	_main	;jump to C main() function
   464                           
   465                           	psect	dataCOMMON
   466  007C                     __pdataCOMMON:
   467  007C                     read_matrix_keypad@once:
   468  007C                     	ds	1
   469                           
   470                           	psect	dataBANK0
   471  0034                     __pdataBANK0:
   472  0034                     main@F864:
   473  0034                     	ds	16
   474                           
   475                           	psect	inittext
   476  056F                     init_fetch0:	
   477                           ;	Called with low address in FSR and high address in W
   478                           
   479  056F  087E               	movf	btemp,w
   480  0570  008A               	movwf	10
   481  0571  087F               	movf	btemp+1,w
   482  0572  0082               	movwf	2
   483  0573                     init_ram0:	
   484                           ;Called with:
   485                           ;	high address of idata address in btemp 
   486                           ;	low address of idata address in btemp+1 
   487                           ;	low address of data in FSR
   488                           ;	high address + 1 of data in btemp-1
   489                           
   490  0573  120A  118A  256F  120A  118A  	fcall	init_fetch0
   491  0578  0080               	movwf	0
   492  0579  0A84               	incf	4,f
   493  057A  0804               	movf	4,w
   494  057B  067D               	xorwf	btemp+-1,w
   495  057C  1903               	btfsc	3,2
   496  057D  3400               	retlw	0
   497  057E  0AFF               	incf	btemp+1,f
   498  057F  1903               	btfsc	3,2
   499  0580  0AFE               	incf	btemp,f
   500  0581  2D73               	goto	init_ram0
   501                           
   502                           	psect	cstackCOMMON
   503  0070                     __pcstackCOMMON:
   504  0070                     ?_init_matrix_keypad:
   505  0070                     ??_init_matrix_keypad:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ?_read_matrix_keypad:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_clcd_write:	
   512                           ; 1 bytes @ 0x0
   513                           
   514  0070                     ?_init_display_controller:	
   515                           ; 1 bytes @ 0x0
   516                           
   517  0070                     ?_init_clcd:	
   518                           ; 1 bytes @ 0x0
   519                           
   520  0070                     ?_init_config:	
   521                           ; 1 bytes @ 0x0
   522                           
   523  0070                     ?_main:	
   524                           ; 1 bytes @ 0x0
   525                           
   526  0070                     ?_scan_keypad:	
   527                           ; 1 bytes @ 0x0
   528                           
   529  0070                     ??_scan_keypad:	
   530                           ; 1 bytes @ 0x0
   531                           
   532  0070                     clcd_write@mode:	
   533                           ; 1 bytes @ 0x0
   534                           
   535  0070                     scan_keypad@i:	
   536                           ; 1 bytes @ 0x0
   537                           
   538                           
   539                           ; 2 bytes @ 0x0
   540  0070                     	ds	1
   541  0071                     ??_clcd_write:
   542                           
   543                           ; 1 bytes @ 0x1
   544  0071                     	ds	1
   545  0072                     ??_read_matrix_keypad:
   546                           
   547                           ; 1 bytes @ 0x2
   548  0072                     	ds	1
   549  0073                     clcd_write@byte:
   550  0073                     read_matrix_keypad@mode:	
   551                           ; 1 bytes @ 0x3
   552                           
   553                           
   554                           ; 1 bytes @ 0x3
   555  0073                     	ds	1
   556  0074                     ??_init_display_controller:
   557  0074                     ?_clcd_print:	
   558                           ; 1 bytes @ 0x4
   559                           
   560  0074                     read_matrix_keypad@key:	
   561                           ; 1 bytes @ 0x4
   562                           
   563  0074                     clcd_print@str:	
   564                           ; 1 bytes @ 0x4
   565                           
   566                           
   567                           ; 2 bytes @ 0x4
   568  0074                     	ds	2
   569  0076                     ??_init_clcd:
   570  0076                     clcd_print@addr:	
   571                           ; 1 bytes @ 0x6
   572                           
   573                           
   574                           ; 1 bytes @ 0x6
   575  0076                     	ds	1
   576  0077                     ??_clcd_print:
   577  0077                     ??_init_config:	
   578                           ; 1 bytes @ 0x7
   579                           
   580                           
   581                           ; 1 bytes @ 0x7
   582  0077                     	ds	1
   583  0078                     ??_main:
   584                           
   585                           ; 1 bytes @ 0x8
   586  0078                     	ds	4
   587                           
   588                           	psect	cstackBANK0
   589  0020                     __pcstackBANK0:
   590  0020                     main@arr:
   591                           
   592                           ; 16 bytes @ 0x0
   593  0020                     	ds	16
   594  0030                     main@key:
   595                           
   596                           ; 1 bytes @ 0x10
   597  0030                     	ds	1
   598  0031                     main@key_backup:
   599                           
   600                           ; 1 bytes @ 0x11
   601  0031                     	ds	1
   602  0032                     main@temp:
   603                           
   604                           ; 1 bytes @ 0x12
   605  0032                     	ds	1
   606  0033                     main@i:
   607                           
   608                           ; 1 bytes @ 0x13
   609  0033                     	ds	1
   610                           
   611                           	psect	maintext
   612  0694                     __pmaintext:	
   613 ;;
   614 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   615 ;;
   616 ;; *************** function _main *****************
   617 ;; Defined at:
   618 ;;		line 19 in file "main.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;  arr            16    0[BANK0 ] unsigned char [16]
   623 ;;  i               1   19[BANK0 ] unsigned char 
   624 ;;  temp            1   18[BANK0 ] unsigned char 
   625 ;;  key_backup      1   17[BANK0 ] unsigned char 
   626 ;;  key             1   16[BANK0 ] unsigned char 
   627 ;; Return value:  Size  Location     Type
   628 ;;                  1    wreg      void 
   629 ;; Registers used:
   630 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   631 ;; Tracked objects:
   632 ;;		On entry : B00/0
   633 ;;		On exit  : 0/0
   634 ;;		Unchanged: 0/0
   635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   636 ;;      Params:         0       0       0       0       0
   637 ;;      Locals:         0      20       0       0       0
   638 ;;      Temps:          4       0       0       0       0
   639 ;;      Totals:         4      20       0       0       0
   640 ;;Total ram usage:       24 bytes
   641 ;; Hardware stack levels required when called: 4
   642 ;; This function calls:
   643 ;;		_clcd_print
   644 ;;		_init_config
   645 ;;		_read_matrix_keypad
   646 ;; This function is called by:
   647 ;;		Startup code after reset
   648 ;; This function uses a non-reentrant model
   649 ;;
   650                           
   651  0694                     _main:	
   652                           ;psect for function _main
   653                           
   654  0694                     l1167:	
   655                           ;incstack = 0
   656                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   657                           
   658                           
   659                           ;main.c: 20:         {;main.c: 21:             clcd_print("Right Scrolling",(0x80 + 0));
   660  0694  3020               	movlw	main@arr& (0+255)
   661  0695  0084               	movwf	4
   662  0696  3034               	movlw	low main@F864
   663  0697  00F8               	movwf	??_main
   664  0698  0804               	movf	4,w
   665  0699  00F9               	movwf	??_main+1
   666  069A  3010               	movlw	16
   667  069B  00FA               	movwf	??_main+2
   668  069C                     u550:
   669  069C  0878               	movf	??_main,w
   670  069D  0084               	movwf	4
   671  069E  1383               	bcf	3,7	;select IRP bank0
   672  069F  0800               	movf	0,w
   673  06A0  00FB               	movwf	??_main+3
   674  06A1  0AF8               	incf	??_main,f
   675  06A2  0879               	movf	??_main+1,w
   676  06A3  0084               	movwf	4
   677  06A4  087B               	movf	??_main+3,w
   678  06A5  0080               	movwf	0
   679  06A6  0AF9               	incf	??_main+1,f
   680  06A7  0BFA               	decfsz	??_main+2,f
   681  06A8  2E9C               	goto	u550
   682  06A9                     l1169:
   683                           
   684                           ;main.c: 23:             temp = arr[15];
   685  06A9  120A  118A  2582  120A  118A  	fcall	_init_config
   686  06AE                     l1171:
   687                           
   688                           ;main.c: 27:             clcd_print(arr,(0xC0 + 0));
   689  06AE  3001               	movlw	1
   690  06AF  120A  118A  25A7  120A  118A  	fcall	_read_matrix_keypad
   691  06B4  00F8               	movwf	??_main
   692  06B5  0878               	movf	??_main,w
   693  06B6  1283               	bcf	3,5	;RP0=0, select bank0
   694  06B7  1303               	bcf	3,6	;RP1=0, select bank0
   695  06B8  00B0               	movwf	main@key
   696  06B9                     l1173:
   697                           
   698                           ;main.c: 28: 
   699  06B9  0A30               	incf	main@key,w
   700  06BA  1903               	btfsc	3,2
   701  06BB  2EBD               	goto	u561
   702  06BC  2EBE               	goto	u560
   703  06BD                     u561:
   704  06BD  2EC2               	goto	l1177
   705  06BE                     u560:
   706  06BE                     l1175:
   707                           
   708                           ;main.c: 29:         }
   709  06BE  0830               	movf	main@key,w
   710  06BF  00F8               	movwf	??_main
   711  06C0  0878               	movf	??_main,w
   712  06C1  00B1               	movwf	main@key_backup
   713  06C2                     l1177:
   714                           
   715                           ;main.c: 30:         else if(key_backup == 4)
   716  06C2  3006               	movlw	6
   717  06C3  0631               	xorwf	main@key_backup,w
   718  06C4  1D03               	btfss	3,2
   719  06C5  2EC7               	goto	u571
   720  06C6  2EC8               	goto	u570
   721  06C7                     u571:
   722  06C7  2F04               	goto	l1199
   723  06C8                     u570:
   724  06C8                     l1179:
   725                           
   726                           ;main.c: 31:         {;main.c: 32:             clcd_print("Left Scrolling",(0x80 + 0));
   727  06C8  3022               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   728  06C9  00F4               	movwf	clcd_print@str
   729  06CA  3080               	movlw	128
   730  06CB  00F5               	movwf	clcd_print@str+1
   731  06CC  3080               	movlw	128
   732  06CD  00F8               	movwf	??_main
   733  06CE  0878               	movf	??_main,w
   734  06CF  00F6               	movwf	clcd_print@addr
   735  06D0  120A  118A  25CC  120A  118A  	fcall	_clcd_print
   736  06D5                     l1181:
   737                           
   738                           ;main.c: 34:             temp = arr[0];
   739  06D5  1283               	bcf	3,5	;RP0=0, select bank0
   740  06D6  1303               	bcf	3,6	;RP1=0, select bank0
   741  06D7  082F               	movf	main@arr+15,w
   742  06D8  00F8               	movwf	??_main
   743  06D9  0878               	movf	??_main,w
   744  06DA  00B2               	movwf	main@temp
   745  06DB                     l1183:
   746                           
   747                           ;main.c: 35:             for(i=0;i<15;i++)
   748  06DB  300F               	movlw	15
   749  06DC  00F8               	movwf	??_main
   750  06DD  0878               	movf	??_main,w
   751  06DE  00B3               	movwf	main@i
   752  06DF                     l1189:
   753                           
   754                           ;main.c: 36:                 arr[i] = arr[i+1];
   755  06DF  0833               	movf	main@i,w
   756  06E0  3EFF               	addlw	255
   757  06E1  3E20               	addlw	(low (main@arr| 0))& (0+255)
   758  06E2  0084               	movwf	4
   759  06E3  1383               	bcf	3,7	;select IRP bank0
   760  06E4  0800               	movf	0,w
   761  06E5  00F8               	movwf	??_main
   762  06E6  0833               	movf	main@i,w
   763  06E7  3E20               	addlw	(low (main@arr| 0))& (0+255)
   764  06E8  0084               	movwf	4
   765  06E9  0878               	movf	??_main,w
   766  06EA  0080               	movwf	0
   767  06EB                     l1191:
   768  06EB  3001               	movlw	1
   769  06EC  02B3               	subwf	main@i,f
   770  06ED                     l1193:
   771  06ED  0833               	movf	main@i,w
   772  06EE  1D03               	btfss	3,2
   773  06EF  2EF1               	goto	u581
   774  06F0  2EF2               	goto	u580
   775  06F1                     u581:
   776  06F1  2EDF               	goto	l1189
   777  06F2                     u580:
   778  06F2                     l1195:
   779                           
   780                           ;main.c: 37:             arr[15] = temp;
   781  06F2  0832               	movf	main@temp,w
   782  06F3  00F8               	movwf	??_main
   783  06F4  0878               	movf	??_main,w
   784  06F5  00A0               	movwf	main@arr
   785  06F6                     l1197:
   786                           
   787                           ;main.c: 38:             clcd_print(arr,(0xC0 + 0));
   788  06F6  3020               	movlw	(low (main@arr| 0))& (0+255)
   789  06F7  00F4               	movwf	clcd_print@str
   790  06F8  3000               	movlw	0
   791  06F9  00F5               	movwf	clcd_print@str+1
   792  06FA  30C0               	movlw	192
   793  06FB  00F8               	movwf	??_main
   794  06FC  0878               	movf	??_main,w
   795  06FD  00F6               	movwf	clcd_print@addr
   796  06FE  120A  118A  25CC  120A  118A  	fcall	_clcd_print
   797                           
   798                           ;main.c: 40:         }
   799  0703  2EAE               	goto	l1171
   800  0704                     l1199:
   801  0704  3004               	movlw	4
   802  0705  0631               	xorwf	main@key_backup,w
   803  0706  1D03               	btfss	3,2
   804  0707  2F09               	goto	u591
   805  0708  2F0A               	goto	u590
   806  0709                     u591:
   807  0709  2EAE               	goto	l1171
   808  070A                     u590:
   809  070A                     l1201:
   810                           
   811                           ;main.c: 42:     return;;main.c: 43: }
   812  070A  3032               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   813  070B  00F4               	movwf	clcd_print@str
   814  070C  3080               	movlw	128
   815  070D  00F5               	movwf	clcd_print@str+1
   816  070E  3080               	movlw	128
   817  070F  00F8               	movwf	??_main
   818  0710  0878               	movf	??_main,w
   819  0711  00F6               	movwf	clcd_print@addr
   820  0712  120A  118A  25CC  120A  118A  	fcall	_clcd_print
   821  0717                     l1203:
   822  0717  1283               	bcf	3,5	;RP0=0, select bank0
   823  0718  1303               	bcf	3,6	;RP1=0, select bank0
   824  0719  0820               	movf	main@arr,w
   825  071A  00F8               	movwf	??_main
   826  071B  0878               	movf	??_main,w
   827  071C  00B2               	movwf	main@temp
   828  071D                     l1205:
   829  071D  01B3               	clrf	main@i
   830  071E                     l1211:
   831  071E  0833               	movf	main@i,w
   832  071F  3E01               	addlw	1
   833  0720  3E20               	addlw	(low (main@arr| 0))& (0+255)
   834  0721  0084               	movwf	4
   835  0722  1383               	bcf	3,7	;select IRP bank0
   836  0723  0800               	movf	0,w
   837  0724  00F8               	movwf	??_main
   838  0725  0833               	movf	main@i,w
   839  0726  3E20               	addlw	(low (main@arr| 0))& (0+255)
   840  0727  0084               	movwf	4
   841  0728  0878               	movf	??_main,w
   842  0729  0080               	movwf	0
   843  072A                     l1213:
   844  072A  3001               	movlw	1
   845  072B  00F8               	movwf	??_main
   846  072C  0878               	movf	??_main,w
   847  072D  07B3               	addwf	main@i,f
   848  072E                     l1215:
   849  072E  300F               	movlw	15
   850  072F  0233               	subwf	main@i,w
   851  0730  1C03               	skipc
   852  0731  2F33               	goto	u601
   853  0732  2F34               	goto	u600
   854  0733                     u601:
   855  0733  2F1E               	goto	l1211
   856  0734                     u600:
   857  0734                     l1217:
   858  0734  0832               	movf	main@temp,w
   859  0735  00F8               	movwf	??_main
   860  0736  0878               	movf	??_main,w
   861  0737  00AF               	movwf	main@arr+15
   862  0738  2EF6               	goto	l1197
   863  0739  120A  118A  2800   	ljmp	start
   864  073C                     __end_of_main:
   865                           
   866                           	psect	text1
   867  05A7                     __ptext1:	
   868 ;; *************** function _read_matrix_keypad *****************
   869 ;; Defined at:
   870 ;;		line 111 in file "matrix_keypad.c"
   871 ;; Parameters:    Size  Location     Type
   872 ;;  mode            1    wreg     unsigned char 
   873 ;; Auto vars:     Size  Location     Type
   874 ;;  mode            1    3[COMMON] unsigned char 
   875 ;;  key             1    4[COMMON] unsigned char 
   876 ;; Return value:  Size  Location     Type
   877 ;;                  1    wreg      unsigned char 
   878 ;; Registers used:
   879 ;;		wreg, status,2, status,0, pclath, cstack
   880 ;; Tracked objects:
   881 ;;		On entry : 0/0
   882 ;;		On exit  : 0/0
   883 ;;		Unchanged: 0/0
   884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   885 ;;      Params:         0       0       0       0       0
   886 ;;      Locals:         2       0       0       0       0
   887 ;;      Temps:          1       0       0       0       0
   888 ;;      Totals:         3       0       0       0       0
   889 ;;Total ram usage:        3 bytes
   890 ;; Hardware stack levels used: 1
   891 ;; Hardware stack levels required when called: 1
   892 ;; This function calls:
   893 ;;		_scan_keypad
   894 ;; This function is called by:
   895 ;;		_main
   896 ;; This function uses a non-reentrant model
   897 ;;
   898                           
   899  05A7                     _read_matrix_keypad:	
   900                           ;psect for function _read_matrix_keypad
   901                           
   902                           
   903                           ;incstack = 0
   904                           ; Regs used in _read_matrix_keypad: [wreg+status,2+status,0+pclath+cstack]
   905                           ;read_matrix_keypad@mode stored from wreg
   906  05A7  00F3               	movwf	read_matrix_keypad@mode
   907  05A8                     l1135:
   908                           
   909                           ;matrix_keypad.c: 111: unsigned char read_matrix_keypad(unsigned char mode);matrix_keypa
      +                          d.c: 112: {;matrix_keypad.c: 113:     static unsigned char once = 1;;matrix_keypad.c: 11
      +                          4:     unsigned char key;;matrix_keypad.c: 116:     key = scan_keypad();
   910  05A8  120A  118A  273C  120A  118A  	fcall	_scan_keypad
   911  05AD  00F2               	movwf	??_read_matrix_keypad
   912  05AE  0872               	movf	??_read_matrix_keypad,w
   913  05AF  00F4               	movwf	read_matrix_keypad@key
   914  05B0                     l1137:
   915                           
   916                           ;matrix_keypad.c: 118:     if (mode == 0)
   917  05B0  0873               	movf	read_matrix_keypad@mode,w
   918  05B1  1D03               	btfss	3,2
   919  05B2  2DB4               	goto	u511
   920  05B3  2DB5               	goto	u510
   921  05B4                     u511:
   922  05B4  2DB7               	goto	l1145
   923  05B5                     u510:
   924  05B5                     l1139:
   925                           
   926                           ;matrix_keypad.c: 119:     {;matrix_keypad.c: 120:         return key;
   927  05B5  0874               	movf	read_matrix_keypad@key,w
   928  05B6  2DCB               	goto	l125
   929  05B7                     l1145:
   930                           
   931                           ;matrix_keypad.c: 123:     {;matrix_keypad.c: 124:         if ((key != 0xFF) && once)
   932  05B7  0A74               	incf	read_matrix_keypad@key,w
   933  05B8  1903               	btfsc	3,2
   934  05B9  2DBB               	goto	u521
   935  05BA  2DBC               	goto	u520
   936  05BB                     u521:
   937  05BB  2DC3               	goto	l1157
   938  05BC                     u520:
   939  05BC                     l1147:
   940  05BC  087C               	movf	read_matrix_keypad@once,w
   941  05BD  1903               	btfsc	3,2
   942  05BE  2DC0               	goto	u531
   943  05BF  2DC1               	goto	u530
   944  05C0                     u531:
   945  05C0  2DC3               	goto	l1157
   946  05C1                     u530:
   947  05C1                     l1149:
   948                           
   949                           ;matrix_keypad.c: 125:         {;matrix_keypad.c: 126:             once = 0;
   950  05C1  01FC               	clrf	read_matrix_keypad@once
   951  05C2  2DB5               	goto	l1139
   952  05C3                     l1157:
   953  05C3  0A74               	incf	read_matrix_keypad@key,w
   954  05C4  1D03               	btfss	3,2
   955  05C5  2DC7               	goto	u541
   956  05C6  2DC8               	goto	u540
   957  05C7                     u541:
   958  05C7  2DCA               	goto	l1161
   959  05C8                     u540:
   960  05C8                     l1159:
   961                           
   962                           ;matrix_keypad.c: 131:         {;matrix_keypad.c: 132:             once = 1;
   963  05C8  01FC               	clrf	read_matrix_keypad@once
   964  05C9  0AFC               	incf	read_matrix_keypad@once,f
   965  05CA                     l1161:
   966                           
   967                           ;matrix_keypad.c: 136:     return 0xFF;
   968  05CA  30FF               	movlw	255
   969  05CB                     l125:
   970  05CB  0008               	return
   971  05CC                     __end_of_read_matrix_keypad:
   972                           
   973                           	psect	text2
   974  073C                     __ptext2:	
   975 ;; *************** function _scan_keypad *****************
   976 ;; Defined at:
   977 ;;		line 24 in file "matrix_keypad.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  i               2    0[COMMON] int 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      unsigned char 
   984 ;; Registers used:
   985 ;;		wreg, status,2, status,0
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       0       0       0       0
   992 ;;      Locals:         2       0       0       0       0
   993 ;;      Temps:          0       0       0       0       0
   994 ;;      Totals:         2       0       0       0       0
   995 ;;Total ram usage:        2 bytes
   996 ;; Hardware stack levels used: 1
   997 ;; This function calls:
   998 ;;		Nothing
   999 ;; This function is called by:
  1000 ;;		_read_matrix_keypad
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004  073C                     _scan_keypad:	
  1005                           ;psect for function _scan_keypad
  1006                           
  1007  073C                     l1043:	
  1008                           ;incstack = 0
  1009                           ; Regs used in _scan_keypad: [wreg+status,2+status,0]
  1010                           
  1011                           
  1012                           ;matrix_keypad.c: 26:     int i;;matrix_keypad.c: 28:     RD3 = 0;
  1013  073C  1283               	bcf	3,5	;RP0=0, select bank0
  1014  073D  1303               	bcf	3,6	;RP1=0, select bank0
  1015  073E  1188               	bcf	8,3	;volatile
  1016                           
  1017                           ;matrix_keypad.c: 29:     RD2 = 1;
  1018  073F  1508               	bsf	8,2	;volatile
  1019                           
  1020                           ;matrix_keypad.c: 30:     RD1 = 1;
  1021  0740  1488               	bsf	8,1	;volatile
  1022                           
  1023                           ;matrix_keypad.c: 31:     RD0 = 1;
  1024  0741  1408               	bsf	8,0	;volatile
  1025  0742                     l1045:
  1026                           
  1027                           ;matrix_keypad.c: 33:     for (i = 100; i--; );
  1028  0742  3064               	movlw	100
  1029  0743  00F0               	movwf	scan_keypad@i
  1030  0744  3000               	movlw	0
  1031  0745  00F1               	movwf	scan_keypad@i+1
  1032  0746                     l1047:
  1033  0746  30FF               	movlw	255
  1034  0747  07F0               	addwf	scan_keypad@i,f
  1035  0748  1803               	skipnc
  1036  0749  0AF1               	incf	scan_keypad@i+1,f
  1037  074A  30FF               	movlw	255
  1038  074B  07F1               	addwf	scan_keypad@i+1,f
  1039  074C  0A70               	incf	scan_keypad@i,w
  1040  074D  1D03               	skipz
  1041  074E  2F53               	goto	u351
  1042  074F  0A71               	incf	scan_keypad@i+1,w
  1043  0750  1D03               	btfss	3,2
  1044  0751  2F53               	goto	u351
  1045  0752  2F54               	goto	u350
  1046  0753                     u351:
  1047  0753  2F46               	goto	l1047
  1048  0754                     u350:
  1049  0754                     l89:
  1050                           
  1051                           ;matrix_keypad.c: 35:     if (RB0 == 0)
  1052  0754  1283               	bcf	3,5	;RP0=0, select bank0
  1053  0755  1303               	bcf	3,6	;RP1=0, select bank0
  1054  0756  1806               	btfsc	6,0	;volatile
  1055  0757  2F59               	goto	u361
  1056  0758  2F5A               	goto	u360
  1057  0759                     u361:
  1058  0759  2F5C               	goto	l90
  1059  075A                     u360:
  1060  075A                     l1049:
  1061                           
  1062                           ;matrix_keypad.c: 36:     {;matrix_keypad.c: 37:         return 1;
  1063  075A  3001               	movlw	1
  1064  075B  2FE7               	goto	l91
  1065  075C                     l90:	
  1066                           ;matrix_keypad.c: 39:     else if (RB1 == 0)
  1067                           
  1068  075C  1886               	btfsc	6,1	;volatile
  1069  075D  2F5F               	goto	u371
  1070  075E  2F60               	goto	u370
  1071  075F                     u371:
  1072  075F  2F62               	goto	l93
  1073  0760                     u370:
  1074  0760                     l1055:
  1075                           
  1076                           ;matrix_keypad.c: 40:     {;matrix_keypad.c: 41:         return 2;
  1077  0760  3002               	movlw	2
  1078  0761  2FE7               	goto	l91
  1079  0762                     l93:	
  1080                           ;matrix_keypad.c: 43:     else if (RB2 == 0)
  1081                           
  1082  0762  1906               	btfsc	6,2	;volatile
  1083  0763  2F65               	goto	u381
  1084  0764  2F66               	goto	u380
  1085  0765                     u381:
  1086  0765  2F68               	goto	l92
  1087  0766                     u380:
  1088  0766                     l1061:
  1089                           
  1090                           ;matrix_keypad.c: 44:     {;matrix_keypad.c: 45:         return 3;
  1091  0766  3003               	movlw	3
  1092  0767  2FE7               	goto	l91
  1093  0768                     l92:
  1094                           
  1095                           ;matrix_keypad.c: 48:     RD3 = 1;
  1096  0768  1588               	bsf	8,3	;volatile
  1097                           
  1098                           ;matrix_keypad.c: 49:     RD2 = 0;
  1099  0769  1108               	bcf	8,2	;volatile
  1100                           
  1101                           ;matrix_keypad.c: 50:     RD1 = 1;
  1102  076A  1488               	bsf	8,1	;volatile
  1103                           
  1104                           ;matrix_keypad.c: 51:     RD0 = 1;
  1105  076B  1408               	bsf	8,0	;volatile
  1106  076C                     l1065:
  1107                           
  1108                           ;matrix_keypad.c: 53:     for (i = 100; i--; );
  1109  076C  3064               	movlw	100
  1110  076D  00F0               	movwf	scan_keypad@i
  1111  076E  3000               	movlw	0
  1112  076F  00F1               	movwf	scan_keypad@i+1
  1113  0770                     l1067:
  1114  0770  30FF               	movlw	255
  1115  0771  07F0               	addwf	scan_keypad@i,f
  1116  0772  1803               	skipnc
  1117  0773  0AF1               	incf	scan_keypad@i+1,f
  1118  0774  30FF               	movlw	255
  1119  0775  07F1               	addwf	scan_keypad@i+1,f
  1120  0776  0A70               	incf	scan_keypad@i,w
  1121  0777  1D03               	skipz
  1122  0778  2F7D               	goto	u391
  1123  0779  0A71               	incf	scan_keypad@i+1,w
  1124  077A  1D03               	btfss	3,2
  1125  077B  2F7D               	goto	u391
  1126  077C  2F7E               	goto	u390
  1127  077D                     u391:
  1128  077D  2F70               	goto	l1067
  1129  077E                     u390:
  1130  077E                     l98:
  1131                           
  1132                           ;matrix_keypad.c: 55:     if (RB0 == 0)
  1133  077E  1283               	bcf	3,5	;RP0=0, select bank0
  1134  077F  1303               	bcf	3,6	;RP1=0, select bank0
  1135  0780  1806               	btfsc	6,0	;volatile
  1136  0781  2F83               	goto	u401
  1137  0782  2F84               	goto	u400
  1138  0783                     u401:
  1139  0783  2F86               	goto	l99
  1140  0784                     u400:
  1141  0784                     l1069:
  1142                           
  1143                           ;matrix_keypad.c: 56:     {;matrix_keypad.c: 57:         return 4;
  1144  0784  3004               	movlw	4
  1145  0785  2FE7               	goto	l91
  1146  0786                     l99:	
  1147                           ;matrix_keypad.c: 59:     else if (RB1 == 0)
  1148                           
  1149  0786  1886               	btfsc	6,1	;volatile
  1150  0787  2F89               	goto	u411
  1151  0788  2F8A               	goto	u410
  1152  0789                     u411:
  1153  0789  2F8C               	goto	l101
  1154  078A                     u410:
  1155  078A                     l1075:
  1156                           
  1157                           ;matrix_keypad.c: 60:     {;matrix_keypad.c: 61:         return 5;
  1158  078A  3005               	movlw	5
  1159  078B  2FE7               	goto	l91
  1160  078C                     l101:	
  1161                           ;matrix_keypad.c: 63:     else if (RB2 == 0)
  1162                           
  1163  078C  1906               	btfsc	6,2	;volatile
  1164  078D  2F8F               	goto	u421
  1165  078E  2F90               	goto	u420
  1166  078F                     u421:
  1167  078F  2F92               	goto	l100
  1168  0790                     u420:
  1169  0790                     l1081:
  1170                           
  1171                           ;matrix_keypad.c: 64:     {;matrix_keypad.c: 65:         return 6;
  1172  0790  3006               	movlw	6
  1173  0791  2FE7               	goto	l91
  1174  0792                     l100:
  1175                           
  1176                           ;matrix_keypad.c: 68:     RD3 = 1;
  1177  0792  1588               	bsf	8,3	;volatile
  1178                           
  1179                           ;matrix_keypad.c: 69:     RD2 = 1;
  1180  0793  1508               	bsf	8,2	;volatile
  1181                           
  1182                           ;matrix_keypad.c: 70:     RD1 = 0;
  1183  0794  1088               	bcf	8,1	;volatile
  1184                           
  1185                           ;matrix_keypad.c: 71:     RD0 = 1;
  1186  0795  1408               	bsf	8,0	;volatile
  1187  0796                     l1085:
  1188                           
  1189                           ;matrix_keypad.c: 73:     for (i = 100; i--; );
  1190  0796  3064               	movlw	100
  1191  0797  00F0               	movwf	scan_keypad@i
  1192  0798  3000               	movlw	0
  1193  0799  00F1               	movwf	scan_keypad@i+1
  1194  079A                     l1087:
  1195  079A  30FF               	movlw	255
  1196  079B  07F0               	addwf	scan_keypad@i,f
  1197  079C  1803               	skipnc
  1198  079D  0AF1               	incf	scan_keypad@i+1,f
  1199  079E  30FF               	movlw	255
  1200  079F  07F1               	addwf	scan_keypad@i+1,f
  1201  07A0  0A70               	incf	scan_keypad@i,w
  1202  07A1  1D03               	skipz
  1203  07A2  2FA7               	goto	u431
  1204  07A3  0A71               	incf	scan_keypad@i+1,w
  1205  07A4  1D03               	btfss	3,2
  1206  07A5  2FA7               	goto	u431
  1207  07A6  2FA8               	goto	u430
  1208  07A7                     u431:
  1209  07A7  2F9A               	goto	l1087
  1210  07A8                     u430:
  1211  07A8                     l106:
  1212                           
  1213                           ;matrix_keypad.c: 75:     if (RB0 == 0)
  1214  07A8  1283               	bcf	3,5	;RP0=0, select bank0
  1215  07A9  1303               	bcf	3,6	;RP1=0, select bank0
  1216  07AA  1806               	btfsc	6,0	;volatile
  1217  07AB  2FAD               	goto	u441
  1218  07AC  2FAE               	goto	u440
  1219  07AD                     u441:
  1220  07AD  2FB0               	goto	l107
  1221  07AE                     u440:
  1222  07AE                     l1089:
  1223                           
  1224                           ;matrix_keypad.c: 76:     {;matrix_keypad.c: 77:         return 7;
  1225  07AE  3007               	movlw	7
  1226  07AF  2FE7               	goto	l91
  1227  07B0                     l107:	
  1228                           ;matrix_keypad.c: 79:     else if (RB1 == 0)
  1229                           
  1230  07B0  1886               	btfsc	6,1	;volatile
  1231  07B1  2FB3               	goto	u451
  1232  07B2  2FB4               	goto	u450
  1233  07B3                     u451:
  1234  07B3  2FB6               	goto	l109
  1235  07B4                     u450:
  1236  07B4                     l1095:
  1237                           
  1238                           ;matrix_keypad.c: 80:     {;matrix_keypad.c: 81:         return 8;
  1239  07B4  3008               	movlw	8
  1240  07B5  2FE7               	goto	l91
  1241  07B6                     l109:	
  1242                           ;matrix_keypad.c: 83:     else if (RB2 == 0)
  1243                           
  1244  07B6  1906               	btfsc	6,2	;volatile
  1245  07B7  2FB9               	goto	u461
  1246  07B8  2FBA               	goto	u460
  1247  07B9                     u461:
  1248  07B9  2FBC               	goto	l108
  1249  07BA                     u460:
  1250  07BA                     l1101:
  1251                           
  1252                           ;matrix_keypad.c: 84:     {;matrix_keypad.c: 85:         return 9;
  1253  07BA  3009               	movlw	9
  1254  07BB  2FE7               	goto	l91
  1255  07BC                     l108:
  1256                           
  1257                           ;matrix_keypad.c: 88:     RD3 = 1;
  1258  07BC  1588               	bsf	8,3	;volatile
  1259                           
  1260                           ;matrix_keypad.c: 89:     RD2 = 1;
  1261  07BD  1508               	bsf	8,2	;volatile
  1262                           
  1263                           ;matrix_keypad.c: 90:     RD1 = 1;
  1264  07BE  1488               	bsf	8,1	;volatile
  1265                           
  1266                           ;matrix_keypad.c: 91:     RD0 = 0;
  1267  07BF  1008               	bcf	8,0	;volatile
  1268  07C0                     l1105:
  1269                           
  1270                           ;matrix_keypad.c: 93:     for (i = 100; i--; );
  1271  07C0  3064               	movlw	100
  1272  07C1  00F0               	movwf	scan_keypad@i
  1273  07C2  3000               	movlw	0
  1274  07C3  00F1               	movwf	scan_keypad@i+1
  1275  07C4                     l1107:
  1276  07C4  30FF               	movlw	255
  1277  07C5  07F0               	addwf	scan_keypad@i,f
  1278  07C6  1803               	skipnc
  1279  07C7  0AF1               	incf	scan_keypad@i+1,f
  1280  07C8  30FF               	movlw	255
  1281  07C9  07F1               	addwf	scan_keypad@i+1,f
  1282  07CA  0A70               	incf	scan_keypad@i,w
  1283  07CB  1D03               	skipz
  1284  07CC  2FD1               	goto	u471
  1285  07CD  0A71               	incf	scan_keypad@i+1,w
  1286  07CE  1D03               	btfss	3,2
  1287  07CF  2FD1               	goto	u471
  1288  07D0  2FD2               	goto	u470
  1289  07D1                     u471:
  1290  07D1  2FC4               	goto	l1107
  1291  07D2                     u470:
  1292  07D2                     l114:
  1293                           
  1294                           ;matrix_keypad.c: 95:     if (RB0 == 0)
  1295  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  1296  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  1297  07D4  1806               	btfsc	6,0	;volatile
  1298  07D5  2FD7               	goto	u481
  1299  07D6  2FD8               	goto	u480
  1300  07D7                     u481:
  1301  07D7  2FDA               	goto	l115
  1302  07D8                     u480:
  1303  07D8                     l1109:
  1304                           
  1305                           ;matrix_keypad.c: 96:     {;matrix_keypad.c: 97:         return '*';
  1306  07D8  302A               	movlw	42
  1307  07D9  2FE7               	goto	l91
  1308  07DA                     l115:	
  1309                           ;matrix_keypad.c: 99:     else if (RB1 == 0)
  1310                           
  1311  07DA  1886               	btfsc	6,1	;volatile
  1312  07DB  2FDD               	goto	u491
  1313  07DC  2FDE               	goto	u490
  1314  07DD                     u491:
  1315  07DD  2FE0               	goto	l117
  1316  07DE                     u490:
  1317  07DE                     l1115:
  1318                           
  1319                           ;matrix_keypad.c: 100:     {;matrix_keypad.c: 101:         return 0;
  1320  07DE  3000               	movlw	0
  1321  07DF  2FE7               	goto	l91
  1322  07E0                     l117:	
  1323                           ;matrix_keypad.c: 103:     else if (RB2 == 0)
  1324                           
  1325  07E0  1906               	btfsc	6,2	;volatile
  1326  07E1  2FE3               	goto	u501
  1327  07E2  2FE4               	goto	u500
  1328  07E3                     u501:
  1329  07E3  2FE6               	goto	l1125
  1330  07E4                     u500:
  1331  07E4                     l1121:
  1332                           
  1333                           ;matrix_keypad.c: 104:     {;matrix_keypad.c: 105:         return '#';
  1334  07E4  3023               	movlw	35
  1335  07E5  2FE7               	goto	l91
  1336  07E6                     l1125:
  1337                           
  1338                           ;matrix_keypad.c: 108:     return 0xFF;
  1339  07E6  30FF               	movlw	255
  1340  07E7                     l91:
  1341  07E7  0008               	return
  1342  07E8                     __end_of_scan_keypad:
  1343                           
  1344                           	psect	text3
  1345  0582                     __ptext3:	
  1346 ;; *************** function _init_config *****************
  1347 ;; Defined at:
  1348 ;;		line 11 in file "main.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : 0/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0
  1364 ;;      Temps:          1       0       0       0       0
  1365 ;;      Totals:         1       0       0       0       0
  1366 ;;Total ram usage:        1 bytes
  1367 ;; Hardware stack levels used: 1
  1368 ;; Hardware stack levels required when called: 3
  1369 ;; This function calls:
  1370 ;;		_clcd_print
  1371 ;;		_init_clcd
  1372 ;;		_init_matrix_keypad
  1373 ;; This function is called by:
  1374 ;;		_main
  1375 ;; This function uses a non-reentrant model
  1376 ;;
  1377                           
  1378  0582                     _init_config:	
  1379                           ;psect for function _init_config
  1380                           
  1381  0582                     l1129:	
  1382                           ;incstack = 0
  1383                           ; Regs used in _init_config: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1384                           
  1385                           
  1386                           ;main.c: 12:     init_config();
  1387  0582  120A  118A  2544  120A  118A  	fcall	_init_clcd
  1388                           
  1389                           ;main.c: 13: 
  1390  0587  120A  118A  254F  120A  118A  	fcall	_init_matrix_keypad
  1391  058C                     l1131:
  1392                           
  1393                           ;main.c: 15: 
  1394  058C  3012               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1395  058D  00F4               	movwf	clcd_print@str
  1396  058E  3080               	movlw	128
  1397  058F  00F5               	movwf	clcd_print@str+1
  1398  0590  3080               	movlw	128
  1399  0591  00F7               	movwf	??_init_config
  1400  0592  0877               	movf	??_init_config,w
  1401  0593  00F6               	movwf	clcd_print@addr
  1402  0594  120A  118A  25CC  120A  118A  	fcall	_clcd_print
  1403  0599                     l1133:
  1404                           
  1405                           ;main.c: 16:         key = read_matrix_keypad(1);
  1406  0599  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1407  059A  00F4               	movwf	clcd_print@str
  1408  059B  3080               	movlw	128
  1409  059C  00F5               	movwf	clcd_print@str+1
  1410  059D  30C0               	movlw	192
  1411  059E  00F7               	movwf	??_init_config
  1412  059F  0877               	movf	??_init_config,w
  1413  05A0  00F6               	movwf	clcd_print@addr
  1414  05A1  120A  118A  25CC  120A  118A  	fcall	_clcd_print
  1415  05A6                     l43:
  1416  05A6  0008               	return
  1417  05A7                     __end_of_init_config:
  1418                           
  1419                           	psect	text4
  1420  054F                     __ptext4:	
  1421 ;; *************** function _init_matrix_keypad *****************
  1422 ;; Defined at:
  1423 ;;		line 4 in file "matrix_keypad.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, status,2
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1437 ;;      Params:         0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0
  1440 ;;      Totals:         0       0       0       0       0
  1441 ;;Total ram usage:        0 bytes
  1442 ;; Hardware stack levels used: 1
  1443 ;; This function calls:
  1444 ;;		Nothing
  1445 ;; This function is called by:
  1446 ;;		_init_config
  1447 ;; This function uses a non-reentrant model
  1448 ;;
  1449                           
  1450  054F                     _init_matrix_keypad:	
  1451                           ;psect for function _init_matrix_keypad
  1452                           
  1453  054F                     l1031:	
  1454                           ;incstack = 0
  1455                           ; Regs used in _init_matrix_keypad: [wreg+status,2]
  1456                           
  1457                           
  1458                           ;matrix_keypad.c: 8:     TRISB = TRISB | 0x07;
  1459  054F  1683               	bsf	3,5	;RP0=1, select bank1
  1460  0550  1303               	bcf	3,6	;RP1=0, select bank1
  1461  0551  0806               	movf	6,w	;volatile
  1462  0552  3807               	iorlw	7
  1463  0553  0086               	movwf	6	;volatile
  1464                           
  1465                           ;matrix_keypad.c: 12:     TRISD = TRISD & 0xF0;
  1466  0554  0808               	movf	8,w	;volatile
  1467  0555  39F0               	andlw	240
  1468  0556  0088               	movwf	8	;volatile
  1469  0557                     l1033:
  1470                           
  1471                           ;matrix_keypad.c: 15:     nRBPU = 0;
  1472  0557  1381               	bcf	1,7	;volatile
  1473  0558                     l1035:
  1474                           
  1475                           ;matrix_keypad.c: 18:     RD3 = 1;
  1476  0558  1283               	bcf	3,5	;RP0=0, select bank0
  1477  0559  1303               	bcf	3,6	;RP1=0, select bank0
  1478  055A  1588               	bsf	8,3	;volatile
  1479  055B                     l1037:
  1480                           
  1481                           ;matrix_keypad.c: 19:     RD2 = 1;
  1482  055B  1508               	bsf	8,2	;volatile
  1483  055C                     l1039:
  1484                           
  1485                           ;matrix_keypad.c: 20:     RD1 = 1;
  1486  055C  1488               	bsf	8,1	;volatile
  1487  055D                     l1041:
  1488                           
  1489                           ;matrix_keypad.c: 21:     RD0 = 1;
  1490  055D  1408               	bsf	8,0	;volatile
  1491  055E                     l84:
  1492  055E  0008               	return
  1493  055F                     __end_of_init_matrix_keypad:
  1494                           
  1495                           	psect	text5
  1496  0544                     __ptext5:	
  1497 ;; *************** function _init_clcd *****************
  1498 ;; Defined at:
  1499 ;;		line 44 in file "clcd.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, status,2, status,0, pclath, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         0       0       0       0       0
  1514 ;;      Locals:         0       0       0       0       0
  1515 ;;      Temps:          0       0       0       0       0
  1516 ;;      Totals:         0       0       0       0       0
  1517 ;;Total ram usage:        0 bytes
  1518 ;; Hardware stack levels used: 1
  1519 ;; Hardware stack levels required when called: 2
  1520 ;; This function calls:
  1521 ;;		_init_display_controller
  1522 ;; This function is called by:
  1523 ;;		_init_config
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527  0544                     _init_clcd:	
  1528                           ;psect for function _init_clcd
  1529                           
  1530  0544                     l1015:	
  1531                           ;incstack = 0
  1532                           ; Regs used in _init_clcd: [wreg+status,2+status,0+pclath+cstack]
  1533                           
  1534                           
  1535                           ;clcd.c: 47:     TRISD = 0x00;
  1536  0544  1683               	bsf	3,5	;RP0=1, select bank1
  1537  0545  1303               	bcf	3,6	;RP1=0, select bank1
  1538  0546  0188               	clrf	8	;volatile
  1539  0547                     l1017:
  1540                           
  1541                           ;clcd.c: 50:     TRISE2 = 0;
  1542  0547  1109               	bcf	9,2	;volatile
  1543  0548                     l1019:
  1544                           
  1545                           ;clcd.c: 51:     TRISE1 = 0;
  1546  0548  1089               	bcf	9,1	;volatile
  1547  0549                     l1021:
  1548                           
  1549                           ;clcd.c: 53:     init_display_controller();
  1550  0549  120A  118A  2631  120A  118A  	fcall	_init_display_controller
  1551  054E                     l23:
  1552  054E  0008               	return
  1553  054F                     __end_of_init_clcd:
  1554                           
  1555                           	psect	text6
  1556  0631                     __ptext6:	
  1557 ;; *************** function _init_display_controller *****************
  1558 ;; Defined at:
  1559 ;;		line 21 in file "clcd.c"
  1560 ;; Parameters:    Size  Location     Type
  1561 ;;		None
  1562 ;; Auto vars:     Size  Location     Type
  1563 ;;		None
  1564 ;; Return value:  Size  Location     Type
  1565 ;;                  1    wreg      void 
  1566 ;; Registers used:
  1567 ;;		wreg, status,2, status,0, pclath, cstack
  1568 ;; Tracked objects:
  1569 ;;		On entry : 0/0
  1570 ;;		On exit  : 0/0
  1571 ;;		Unchanged: 0/0
  1572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1573 ;;      Params:         0       0       0       0       0
  1574 ;;      Locals:         0       0       0       0       0
  1575 ;;      Temps:          2       0       0       0       0
  1576 ;;      Totals:         2       0       0       0       0
  1577 ;;Total ram usage:        2 bytes
  1578 ;; Hardware stack levels used: 1
  1579 ;; Hardware stack levels required when called: 1
  1580 ;; This function calls:
  1581 ;;		_clcd_write
  1582 ;; This function is called by:
  1583 ;;		_init_clcd
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587  0631                     _init_display_controller:	
  1588                           ;psect for function _init_display_controller
  1589                           
  1590  0631                     l991:	
  1591                           ;incstack = 0
  1592                           ; Regs used in _init_display_controller: [wreg+status,2+status,0+pclath+cstack]
  1593                           
  1594                           
  1595                           ;clcd.c: 24:     _delay((unsigned long)((30)*(20000000/4000.0)));
  1596  0631  30C3               	movlw	195
  1597  0632  00F5               	movwf	??_init_display_controller+1
  1598  0633  30CD               	movlw	205
  1599  0634  00F4               	movwf	??_init_display_controller
  1600  0635                     u617:
  1601  0635  0BF4               	decfsz	??_init_display_controller,f
  1602  0636  2E35               	goto	u617
  1603  0637  0BF5               	decfsz	??_init_display_controller+1,f
  1604  0638  2E35               	goto	u617
  1605  0639                     l993:
  1606                           
  1607                           ;clcd.c: 27:     clcd_write(0x33, 0);
  1608  0639  01F0               	clrf	clcd_write@mode
  1609  063A  3033               	movlw	51
  1610  063B  120A  118A  25FB  120A  118A  	fcall	_clcd_write
  1611  0640                     l995:
  1612                           
  1613                           ;clcd.c: 28:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1614  0640  301B               	movlw	27
  1615  0641  00F5               	movwf	??_init_display_controller+1
  1616  0642  309E               	movlw	158
  1617  0643  00F4               	movwf	??_init_display_controller
  1618  0644                     u627:
  1619  0644  0BF4               	decfsz	??_init_display_controller,f
  1620  0645  2E44               	goto	u627
  1621  0646  0BF5               	decfsz	??_init_display_controller+1,f
  1622  0647  2E44               	goto	u627
  1623  0648  0000               	nop
  1624                           
  1625                           ;clcd.c: 29:     clcd_write(0x33, 0);
  1626  0649  01F0               	clrf	clcd_write@mode
  1627  064A  3033               	movlw	51
  1628  064B  120A  118A  25FB  120A  118A  	fcall	_clcd_write
  1629  0650                     l997:
  1630                           
  1631                           ;clcd.c: 30:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1632  0650  30A6               	movlw	166
  1633  0651  00F4               	movwf	??_init_display_controller
  1634  0652                     u637:
  1635  0652  0BF4               	decfsz	??_init_display_controller,f
  1636  0653  2E52               	goto	u637
  1637  0654  0000               	nop
  1638  0655                     l999:
  1639                           
  1640                           ;clcd.c: 31:     clcd_write(0x33, 0);
  1641  0655  01F0               	clrf	clcd_write@mode
  1642  0656  3033               	movlw	51
  1643  0657  120A  118A  25FB  120A  118A  	fcall	_clcd_write
  1644  065C                     l1001:
  1645                           
  1646                           ;clcd.c: 32:     _delay((unsigned long)((1)*(20000000/4000000.0)));
  1647  065C  2E5D               	nop2	;2 cycle nop
  1648  065D  2E5E               	nop2	;2 cycle nop
  1649  065E  0000               	nop
  1650  065F                     l1003:
  1651                           
  1652                           ;clcd.c: 34:     clcd_write(0x02, 0);
  1653  065F  01F0               	clrf	clcd_write@mode
  1654  0660  3002               	movlw	2
  1655  0661  120A  118A  25FB  120A  118A  	fcall	_clcd_write
  1656  0666                     l1005:
  1657                           
  1658                           ;clcd.c: 35:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1659  0666  30A6               	movlw	166
  1660  0667  00F4               	movwf	??_init_display_controller
  1661  0668                     u647:
  1662  0668  0BF4               	decfsz	??_init_display_controller,f
  1663  0669  2E68               	goto	u647
  1664  066A  0000               	nop
  1665                           
  1666                           ;clcd.c: 36:     clcd_write(0x28, 0);
  1667  066B  01F0               	clrf	clcd_write@mode
  1668  066C  3028               	movlw	40
  1669  066D  120A  118A  25FB  120A  118A  	fcall	_clcd_write
  1670  0672                     l1007:
  1671                           
  1672                           ;clcd.c: 37:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1673  0672  30A6               	movlw	166
  1674  0673  00F4               	movwf	??_init_display_controller
  1675  0674                     u657:
  1676  0674  0BF4               	decfsz	??_init_display_controller,f
  1677  0675  2E74               	goto	u657
  1678  0676  0000               	nop
  1679  0677                     l1009:
  1680                           
  1681                           ;clcd.c: 38:     clcd_write(0x01, 0);
  1682  0677  01F0               	clrf	clcd_write@mode
  1683  0678  3001               	movlw	1
  1684  0679  120A  118A  25FB  120A  118A  	fcall	_clcd_write
  1685                           
  1686                           ;clcd.c: 39:     _delay((unsigned long)((500)*(20000000/4000000.0)));
  1687  067E  3004               	movlw	4
  1688  067F  00F5               	movwf	??_init_display_controller+1
  1689  0680  303D               	movlw	61
  1690  0681  00F4               	movwf	??_init_display_controller
  1691  0682                     u667:
  1692  0682  0BF4               	decfsz	??_init_display_controller,f
  1693  0683  2E82               	goto	u667
  1694  0684  0BF5               	decfsz	??_init_display_controller+1,f
  1695  0685  2E82               	goto	u667
  1696  0686  2E87               	nop2
  1697  0687                     l1011:
  1698                           
  1699                           ;clcd.c: 40:     clcd_write(0x0C, 0);
  1700  0687  01F0               	clrf	clcd_write@mode
  1701  0688  300C               	movlw	12
  1702  0689  120A  118A  25FB  120A  118A  	fcall	_clcd_write
  1703  068E                     l1013:
  1704                           
  1705                           ;clcd.c: 41:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1706  068E  30A6               	movlw	166
  1707  068F  00F4               	movwf	??_init_display_controller
  1708  0690                     u677:
  1709  0690  0BF4               	decfsz	??_init_display_controller,f
  1710  0691  2E90               	goto	u677
  1711  0692  0000               	nop
  1712  0693                     l20:
  1713  0693  0008               	return
  1714  0694                     __end_of_init_display_controller:
  1715                           
  1716                           	psect	text7
  1717  05CC                     __ptext7:	
  1718 ;; *************** function _clcd_print *****************
  1719 ;; Defined at:
  1720 ;;		line 62 in file "clcd.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;  str             2    4[COMMON] PTR const unsigned char 
  1723 ;;		 -> STR_4(15), STR_3(16), main@arr(16), STR_2(17), 
  1724 ;;		 -> STR_1(16), 
  1725 ;;  addr            1    6[COMMON] unsigned char 
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1737 ;;      Params:         3       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0
  1740 ;;      Totals:         3       0       0       0       0
  1741 ;;Total ram usage:        3 bytes
  1742 ;; Hardware stack levels used: 1
  1743 ;; Hardware stack levels required when called: 1
  1744 ;; This function calls:
  1745 ;;		_clcd_write
  1746 ;; This function is called by:
  1747 ;;		_init_config
  1748 ;;		_main
  1749 ;; This function uses a non-reentrant model
  1750 ;;
  1751                           
  1752  05CC                     _clcd_print:	
  1753                           ;psect for function _clcd_print
  1754                           
  1755  05CC                     l1023:	
  1756                           ;incstack = 0
  1757                           ; Regs used in _clcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1758                           
  1759                           
  1760                           ;clcd.c: 62: void clcd_print(const char *str, unsigned char addr);clcd.c: 63: {;clcd.c: 
      +                          64:     clcd_write(addr, 0);
  1761  05CC  01F0               	clrf	clcd_write@mode
  1762  05CD  0876               	movf	clcd_print@addr,w
  1763  05CE  120A  118A  25FB  120A  118A  	fcall	_clcd_write
  1764                           
  1765                           ;clcd.c: 66:     while (*str != '\0')
  1766  05D3  2DEA               	goto	l1029
  1767  05D4                     l1025:
  1768                           
  1769                           ;clcd.c: 67:     {;clcd.c: 68:         clcd_write(*str, 1);
  1770  05D4  01F0               	clrf	clcd_write@mode
  1771  05D5  0AF0               	incf	clcd_write@mode,f
  1772  05D6  0875               	movf	clcd_print@str+1,w
  1773  05D7  00FF               	movwf	btemp+1
  1774  05D8  0874               	movf	clcd_print@str,w
  1775  05D9  0084               	movwf	4
  1776  05DA  120A  118A  2003  120A  118A  	fcall	stringtab
  1777  05DF  120A  118A  25FB  120A  118A  	fcall	_clcd_write
  1778  05E4                     l1027:
  1779                           
  1780                           ;clcd.c: 69:         str++;
  1781  05E4  3001               	movlw	1
  1782  05E5  07F4               	addwf	clcd_print@str,f
  1783  05E6  1803               	skipnc
  1784  05E7  0AF5               	incf	clcd_print@str+1,f
  1785  05E8  3000               	movlw	0
  1786  05E9  07F5               	addwf	clcd_print@str+1,f
  1787  05EA                     l1029:
  1788                           
  1789                           ;clcd.c: 66:     while (*str != '\0')
  1790  05EA  0875               	movf	clcd_print@str+1,w
  1791  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  1792  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  1793  05ED  00FF               	movwf	btemp+1
  1794  05EE  0874               	movf	clcd_print@str,w
  1795  05EF  0084               	movwf	4
  1796  05F0  120A  118A  2003  120A  118A  	fcall	stringtab
  1797  05F5  3A00               	xorlw	0
  1798  05F6  1D03               	skipz
  1799  05F7  2DF9               	goto	u341
  1800  05F8  2DFA               	goto	u340
  1801  05F9                     u341:
  1802  05F9  2DD4               	goto	l1025
  1803  05FA                     u340:
  1804  05FA                     l32:
  1805  05FA  0008               	return
  1806  05FB                     __end_of_clcd_print:
  1807                           
  1808                           	psect	text8
  1809  05FB                     __ptext8:	
  1810 ;; *************** function _clcd_write *****************
  1811 ;; Defined at:
  1812 ;;		line 4 in file "clcd.c"
  1813 ;; Parameters:    Size  Location     Type
  1814 ;;  byte            1    wreg     unsigned char 
  1815 ;;  mode            1    0[COMMON] unsigned char 
  1816 ;; Auto vars:     Size  Location     Type
  1817 ;;  byte            1    3[COMMON] unsigned char 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1827 ;;      Params:         1       0       0       0       0
  1828 ;;      Locals:         1       0       0       0       0
  1829 ;;      Temps:          2       0       0       0       0
  1830 ;;      Totals:         4       0       0       0       0
  1831 ;;Total ram usage:        4 bytes
  1832 ;; Hardware stack levels used: 1
  1833 ;; This function calls:
  1834 ;;		Nothing
  1835 ;; This function is called by:
  1836 ;;		_init_display_controller
  1837 ;;		_clcd_print
  1838 ;;		_clcd_putch
  1839 ;; This function uses a non-reentrant model
  1840 ;;
  1841                           
  1842  05FB                     _clcd_write:	
  1843                           ;psect for function _clcd_write
  1844                           
  1845                           
  1846                           ;incstack = 0
  1847                           ; Regs used in _clcd_write: [wreg+status,2+status,0]
  1848                           ;clcd_write@byte stored from wreg
  1849  05FB  00F3               	movwf	clcd_write@byte
  1850  05FC                     l971:
  1851                           
  1852                           ;clcd.c: 4: static void clcd_write(unsigned char byte, unsigned char mode);clcd.c: 5: {;
      +                          clcd.c: 6:     RE2 = mode;
  1853  05FC  1870               	btfsc	clcd_write@mode,0
  1854  05FD  2DFF               	goto	u311
  1855  05FE  2E03               	goto	u310
  1856  05FF                     u311:
  1857  05FF  1283               	bcf	3,5	;RP0=0, select bank0
  1858  0600  1303               	bcf	3,6	;RP1=0, select bank0
  1859  0601  1509               	bsf	9,2	;volatile
  1860  0602  2E06               	goto	u324
  1861  0603                     u310:
  1862  0603  1283               	bcf	3,5	;RP0=0, select bank0
  1863  0604  1303               	bcf	3,6	;RP1=0, select bank0
  1864  0605  1109               	bcf	9,2	;volatile
  1865  0606                     u324:
  1866  0606                     l973:
  1867                           
  1868                           ;clcd.c: 8:     PORTD = byte & 0xF0;
  1869  0606  0873               	movf	clcd_write@byte,w
  1870  0607  39F0               	andlw	240
  1871  0608  0088               	movwf	8	;volatile
  1872  0609                     l975:
  1873                           
  1874                           ;clcd.c: 9:     RE1 = 1;
  1875  0609  1489               	bsf	9,1	;volatile
  1876  060A                     l977:
  1877                           
  1878                           ;clcd.c: 10:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1879  060A  30A6               	movlw	166
  1880  060B  00F1               	movwf	??_clcd_write
  1881  060C                     u687:
  1882  060C  0BF1               	decfsz	??_clcd_write,f
  1883  060D  2E0C               	goto	u687
  1884  060E  0000               	nop
  1885  060F                     l979:
  1886                           
  1887                           ;clcd.c: 11:     RE1 = 0;
  1888  060F  1283               	bcf	3,5	;RP0=0, select bank0
  1889  0610  1303               	bcf	3,6	;RP1=0, select bank0
  1890  0611  1089               	bcf	9,1	;volatile
  1891  0612                     l981:
  1892                           
  1893                           ;clcd.c: 13:     PORTD = (byte & 0x0F) << 4;
  1894  0612  0873               	movf	clcd_write@byte,w
  1895  0613  390F               	andlw	15
  1896  0614  00F1               	movwf	??_clcd_write
  1897  0615  3003               	movlw	3
  1898  0616                     u335:
  1899  0616  1003               	clrc
  1900  0617  0DF1               	rlf	??_clcd_write,f
  1901  0618  3EFF               	addlw	-1
  1902  0619  1D03               	skipz
  1903  061A  2E16               	goto	u335
  1904  061B  1003               	clrc
  1905  061C  0D71               	rlf	??_clcd_write,w
  1906  061D  0088               	movwf	8	;volatile
  1907  061E                     l983:
  1908                           
  1909                           ;clcd.c: 14:     RE1 = 1;
  1910  061E  1489               	bsf	9,1	;volatile
  1911  061F                     l985:
  1912                           
  1913                           ;clcd.c: 15:     _delay((unsigned long)((100)*(20000000/4000000.0)));
  1914  061F  30A6               	movlw	166
  1915  0620  00F1               	movwf	??_clcd_write
  1916  0621                     u697:
  1917  0621  0BF1               	decfsz	??_clcd_write,f
  1918  0622  2E21               	goto	u697
  1919  0623  0000               	nop
  1920  0624                     l987:
  1921                           
  1922                           ;clcd.c: 16:     RE1 = 0;
  1923  0624  1283               	bcf	3,5	;RP0=0, select bank0
  1924  0625  1303               	bcf	3,6	;RP1=0, select bank0
  1925  0626  1089               	bcf	9,1	;volatile
  1926  0627                     l989:
  1927                           
  1928                           ;clcd.c: 18:     _delay((unsigned long)((4100)*(20000000/4000000.0)));
  1929  0627  301B               	movlw	27
  1930  0628  00F2               	movwf	??_clcd_write+1
  1931  0629  309E               	movlw	158
  1932  062A  00F1               	movwf	??_clcd_write
  1933  062B                     u707:
  1934  062B  0BF1               	decfsz	??_clcd_write,f
  1935  062C  2E2B               	goto	u707
  1936  062D  0BF2               	decfsz	??_clcd_write+1,f
  1937  062E  2E2B               	goto	u707
  1938  062F  0000               	nop
  1939  0630                     l17:
  1940  0630  0008               	return
  1941  0631                     __end_of_clcd_write:
  1942  007E                     btemp	set	126	;btemp
  1943  007E                     wtemp0	set	126
  1944                           
  1945                           	psect	config
  1946                           
  1947                           ;Config register CONFIG @ 0x2007
  1948                           ;	Oscillator Selection bits
  1949                           ;	FOSC = 0x3, unprogrammed default
  1950                           ;	Watchdog Timer Enable bit
  1951                           ;	WDTE = OFF, WDT disabled
  1952                           ;	Power-up Timer Enable bit
  1953                           ;	PWRTE = 0x1, unprogrammed default
  1954                           ;	Brown-out Reset Enable bit
  1955                           ;	BOREN = 0x1, unprogrammed default
  1956                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1957                           ;	LVP = 0x1, unprogrammed default
  1958                           ;	Data EEPROM Memory Code Protection bit
  1959                           ;	CPD = 0x1, unprogrammed default
  1960                           ;	Flash Program Memory Write Enable bits
  1961                           ;	WRT = 0x3, unprogrammed default
  1962                           ;	In-Circuit Debugger Mode bit
  1963                           ;	DEBUG = 0x1, unprogrammed default
  1964                           ;	Flash Program Memory Code Protection bit
  1965                           ;	CP = 0x1, unprogrammed default
  1966  2007                     	org	8199
  1967  2007  3FFB               	dw	16379

Data Sizes:
    Strings     64
    Constant    0
    Data        17
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      13
    BANK0            80     20      36
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    clcd_print@str	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_4(CODE[15]), STR_3(CODE[16]), main@arr(BANK0[16]), STR_2(CODE[17]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_init_config
    _read_matrix_keypad->_scan_keypad
    _init_config->_clcd_print
    _init_clcd->_init_display_controller
    _init_display_controller->_clcd_write
    _clcd_print->_clcd_write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                24    24      0    5394
                                              8 COMMON     4     4      0
                                              0 BANK0     20    20      0
                         _clcd_print
                        _init_config
                 _read_matrix_keypad
 ---------------------------------------------------------------------------------
 (1) _read_matrix_keypad                                   3     3      0     203
                                              2 COMMON     3     3      0
                        _scan_keypad
 ---------------------------------------------------------------------------------
 (2) _scan_keypad                                          2     2      0      92
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _init_config                                          1     1      0    2783
                                              7 COMMON     1     1      0
                         _clcd_print
                          _init_clcd
                 _init_matrix_keypad
 ---------------------------------------------------------------------------------
 (2) _init_matrix_keypad                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _init_clcd                                            0     0      0     902
            _init_display_controller
 ---------------------------------------------------------------------------------
 (3) _init_display_controller                              2     2      0     902
                                              4 COMMON     2     2      0
                         _clcd_write
 ---------------------------------------------------------------------------------
 (2) _clcd_print                                           3     0      3    1881
                                              4 COMMON     3     0      3
                         _clcd_write
 ---------------------------------------------------------------------------------
 (4) _clcd_write                                           4     3      1     902
                                              0 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _clcd_print
     _clcd_write
   _init_config
     _clcd_print
     _init_clcd
       _init_display_controller
         _clcd_write
     _init_matrix_keypad
   _read_matrix_keypad
     _scan_keypad

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     14      24       5       45.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      C       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      31      12        0.0%
ABS                  0      0      31       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Mon Aug 29 03:22:48 2022

                              pc 0002                   clcd_print@addr 0076                               l20 0693  
                             l23 054E                               l32 05FA                               l17 0630  
                             l43 05A6                               l90 075C                               l91 07E7  
                             l84 055E                               l92 0768                               l93 0762  
                             l89 0754                               l98 077E                               l99 0786  
                             fsr 0004               _init_matrix_keypad 054F                              l100 0792  
                            l101 078C                              l114 07D2                              l106 07A8  
                            l115 07DA                              l107 07B0                              l108 07BC  
                            l117 07E0                              l109 07B6                              l125 05CB  
                            l971 05FC                              l981 0612                              l973 0606  
                            l983 061E                              l975 0609                              l991 0631  
                            l985 061F                              l977 060A                              l993 0639  
                            l987 0624                              l979 060F                              l995 0640  
                            l989 0627                              l997 0650                              l999 0655  
                            _RB0 0030                              _RB1 0031                              _RB2 0032  
                            _RD0 0040                              _RD1 0041                              _RD2 0042  
                            _RE1 0049                              _RD3 0043                              _RE2 004A  
                            u310 0603                              u311 05FF                              u400 0784  
                            u401 0783                              u410 078A                              u411 0789  
                            u324 0606                              u340 05FA                              u500 07E4  
                            u420 0790                              u341 05F9                              u501 07E3  
                            u421 078F                              u430 07A8                              u350 0754  
                            u510 05B5                              u335 0616                              u431 07A7  
                            u351 0753                              u511 05B4                              u440 07AE  
                            u360 075A                              u520 05BC                              u600 0734  
                            u441 07AD                              u361 0759                              u521 05BB  
                            u601 0733                              u450 07B4                              u370 0760  
                            u530 05C1                              u451 07B3                              u371 075F  
                            u531 05C0                              u460 07BA                              u380 0766  
                            u540 05C8                              u461 07B9                              u381 0765  
                            u541 05C7                              u470 07D2                              u390 077E  
                            u550 069C                              u471 07D1                              u391 077D  
                            u480 07D8                              u560 06BE                              u617 0635  
                            u481 07D7                              u561 06BD                              u490 07DE  
                            u570 06C8                              u707 062B                              u627 0644  
                            u491 07DD                              u571 06C7                              u580 06F2  
                            u637 0652                              u581 06F1                              u590 070A  
                            u647 0668                              u591 0709                              u657 0674  
                            u667 0682                              u677 0690                              u687 060C  
                            u697 0621                              fsr0 0004                              indf 0000  
            ?_init_matrix_keypad 0070                             l1001 065C                             l1011 0687  
                           l1003 065F                             l1013 068E                             l1005 0666  
                           l1021 0549                             l1101 07BA                             l1023 05CC  
                           l1007 0672                             l1015 0544                             l1031 054F  
                           l1025 05D4                             l1009 0677                             l1017 0547  
                           l1041 055D                             l1033 0557                             l1121 07E4  
                           l1105 07C0                             l1201 070A                             l1027 05E4  
                           l1019 0548                             l1035 0558                             l1131 058C  
                           l1115 07DE                             l1107 07C4                             l1043 073C  
                           l1211 071E                             l1203 0717                             l1029 05EA  
                           l1037 055B                             l1133 0599                             l1125 07E6  
                           l1109 07D8                             l1061 0766                             l1045 0742  
                           l1213 072A                             l1205 071D                             l1039 055C  
                           l1055 0760                             l1047 0746                             l1135 05A8  
                           l1215 072E                             l1129 0582                             l1081 0790  
                           l1065 076C                             l1049 075A                             l1161 05CA  
                           l1145 05B7                             l1137 05B0                             l1217 0734  
                           l1075 078A                             l1067 0770                             l1147 05BC  
                           l1139 05B5                             l1171 06AE                             l1085 0796  
                           l1069 0784                             l1149 05C1                             l1157 05C3  
                           l1181 06D5                             l1173 06B9                             l1095 07B4  
                           l1087 079A                             l1159 05C8                             l1191 06EB  
                           l1183 06DB                             l1175 06BE                             l1167 0694  
                           l1089 07AE                             l1193 06ED                             l1177 06C2  
                           l1169 06A9                             l1195 06F2                             l1179 06C8  
                           l1197 06F6                             l1189 06DF                             l1199 0704  
                           STR_1 0024                             STR_2 0013                             STR_3 0034  
                           STR_4 0044                             _main 0694                             btemp 007E  
                           start 0000             ??_init_matrix_keypad 0070                   clcd_write@byte 0073  
                 clcd_write@mode 0070                            ?_main 0070                     ?_init_config 0070  
                          _PORTD 0008                            _TRISB 0086                            _TRISD 0088  
                          _nRBPU 040F               _read_matrix_keypad 05A7                            main@i 0033  
                          pclath 000A              ?_read_matrix_keypad 0070                            status 0003  
                          wtemp0 007E                     ?_scan_keypad 0070                  __initialization 07E8  
                   __end_of_main 073C             ??_read_matrix_keypad 0072                           ??_main 0078  
                         _TRISE1 0449                           _TRISE2 044A          _init_display_controller 0631  
                   __pdataCOMMON 007C          __end_of__initialization 07FC                   __pcstackCOMMON 0070  
                   __pidataBANK0 055F        ??_init_display_controller 0074                       _clcd_print 05CC  
                     _clcd_write 05FB                       __pmaintext 0694                   main@key_backup 0031  
                     __stringtab 0003                          __ptext1 05A7                          __ptext2 073C  
                        __ptext3 0582                          __ptext4 054F                          __ptext5 0544  
                        __ptext6 0631                          __ptext7 05CC                          __ptext8 05FB  
__end_of_init_display_controller 0694                __end_of_init_clcd 054F                          main@arr 0020  
                        main@key 0030             end_of_initialization 07FC                      ?_clcd_print 0074  
                    ?_clcd_write 0070                    clcd_print@str 0074                    __pidataCOMMON 0543  
            start_initialization 07E8                     scan_keypad@i 0070           read_matrix_keypad@mode 0073  
         read_matrix_keypad@once 007C                       init_fetch0 056F                      __pdataBANK0 0034  
                  ??_init_config 0077                        ___latbits 0002                    __pcstackBANK0 0020  
                  ??_scan_keypad 0070                        __pstrings 0003                        _init_clcd 0544  
            __end_of_init_config 05A7         ?_init_display_controller 0070                     ??_clcd_print 0077  
     __end_of_init_matrix_keypad 055F                     ??_clcd_write 0071              __end_of_scan_keypad 07E8  
                    __stringbase 0012               __end_of_clcd_print 05FB               __end_of_clcd_write 0631  
                     ?_init_clcd 0070            read_matrix_keypad@key 0074       __end_of_read_matrix_keypad 05CC  
             __end_of__stringtab 0013                      _init_config 0582                      _scan_keypad 073C  
                       main@F864 0034                         main@temp 0032                         init_ram0 0573  
                    ??_init_clcd 0076                        stringcode 000D                         stringdir 000D  
                       stringtab 0003  
